# Dexter Naming Rule Example
# Legends:
#    {} = environment variable key
#    () = flag key
#    <> = product key

# '.*'     # MATCH ANY CHARACTER
# [a-z]    # MATCH ANY SINGLE LOWER CASE 
# [a-z]+   # MATCH ANY UNLIMITED TIMES LOWER CASE
#
# '^ABC'   # MATCH STRING STARTSWITH 'ABC'
# 'ABC$'   # MATCH STRING ENDSWITH 'ABC'
#
# [A-Z]{3} # MATCH 3 CAPITAL ALPHABET
# [0-9]{4} # MATCH 4 DECIMAL


# global:
__flag__:
    USERNAME : 
        __default__: '{USER}'
        __pattern__: '[a-zA-Z0-9.]+'
        
    VER : 
        __default__: 'v01'      
        __pattern__: 'v[0-9]+'
        
    DESC : 
        __default__: 'desc'
        __pattern__: '[a-zA-Z0-9_]+'
    
    FRAME : 
        __default__: '%04d'
        __pattern__: '\%04d|[0-9]{4}|\#+'
#------------------------------------------------------------------------------     
    PROJECT : 
        __default__: 'PROJECT_NAME'
        __pattern__: '[a-zA-Z0-9]+'

    SEQUENCE : 
        __default__: 'SEQUENCE_NAME'
        __pattern__: '[A-Z]+' # MUST BE CAPITAL

    SHOT : 
        __default__: 'SEQUENCE_NUMBER'
        __pattern__: '[a-zA-Z0-9]+_[0-9]+'

    TEAM : 
        __default__: 'rnd'
        __pattern__: '[a-zA-Z0-9]+'

    TASK : 
        __default__: 'rnd'
        __pattern__: '[a-zA-Z0-9]+'
        
    ANY :
        __default__: ''
        __pattern__: '.*'

    PUBDEV :
        __default__: 'pub'
        __pattern__: 'dev|pub'
                            

__product__: 
    shot_path: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)'
    pub_path: '<shot_path>/publish'
    home_path: '/home/(USERNAME)'
    path: '<home_path>/temp'

__child__: 
    camera:        
        __flag__:
            WORK_VER : 
                __default__: 'w01'
                __pattern__: 'w[0-9]+'


        __product__:
            root: '<pub_path>/camera'

                
        __child__:
            matchmove:
                __flag__:
                    PLATE :
                        __default__: 'main1'
                        __pattern__: '[a-zA-Z0-9.]+'

                    ASSET_GEO : 
                        __default__: 'assetGeo'
                        __pattern__: '[a-zA-Z0-9_.]+'

                    ASSET_LOC : 
                        __default__: 'assetLoc'
                        __pattern__: '[a-zA-Z0-9_.]+'

                    ASSET_KEY : 
                        __default__: 'assetKey'
                        __pattern__: '[a-zA-Z0-9_:.]+'
                       
                __product__:
                    root: '<pub_path>/camera/(SHOT)_(PLATE)_(VER)'
                    camera_path: '<root>/(SHOT)_(PLATE)_camera_(VER).abc'
                    camera_geo_path: '<root>/(SHOT)_(PLATE)_camGeo_(VER).abc'
                    camera_loc_path: '<root>/(SHOT)_(PLATE)_camLoc_(VER).abc'
                    camera_asset_geo_path: '<root>/(SHOT)_(PLATE)_(ASSET_GEO)_(VER).abc'
                    camera_asset_loc_path: '<root>/(SHOT)_(PLATE)_(ASSET_LOC)_(VER).abc'
                    camera_asset_key_path: '<root>/(SHOT)_(PLATE)_(ASSET_KEY)_(VER).json'
                    camera_asset_key_abc_path: '<root>/(SHOT)_(PLATE)_(ASSET_KEY)_(VER).abc'
                    imageplane_json_path: '<root>/(SHOT)_(PLATE)_imageplane_(VER).json'
                    imageplane_path: '<root>/(SHOT)_(PLATE)_imageplane_(VER).abc'
                    panzoom_json_path: '<root>/(SHOT)_(PLATE)_panzoom_(VER).json'
                    panzoom_nuke_path: '<root>/(SHOT)_(PLATE)_panzoom_(VER).nk'
                    maya_dev_file: '<shot_path>/matchmove/(PUBDEV)/scenes/(SHOT)_(PLATE)_matchmove_(VER)_(WORK_VER).mb'
                    maya_pub_file: '<root>/(SHOT)_(PLATE)_matchmove_(VER).mb'

            shot_camera:
                __flag__:
                    PLATE :
                        __default__: 'main1'
                        __pattern__: '[a-zA-Z0-9.]+'

                    ASSET_GEO : 
                        __default__: 'assetGeo'
                        __pattern__: '[a-zA-Z0-9_.]+'

                    ASSET_LOC : 
                        __default__: 'assetLoc'
                        __pattern__: '[a-zA-Z0-9_.]+'

                    ASSET_KEY : 
                        __default__: 'assetKey'
                        __pattern__: '[a-zA-Z0-9_:.]+'
                    
                    TEAM : 
                        __default__: 'matchmove'
                        __pattern__: '[a-zA-Z0-9_:.]+'
                    
                    DB_ID :
                        __default__: 'ffffffffffffffffffffffff'
                        __pattern__: '[a-zA-Z0-9]+'
                        
                __product__:
                    root: '<shot_path>/(TEAM)/(PUBDEV)/scenes/(VER)'
                    camera_path: '<root>/(SHOT)_(PLATE)_camera_(VER).abc'
                    camera_geo_path: '<root>/(SHOT)_(PLATE)_camGeo_(VER).abc'
                    camera_loc_path: '<root>/(SHOT)_(PLATE)_camLoc_(VER).abc'
                    camera_asset_geo_path: '<root>/(SHOT)_(PLATE)_(ASSET_GEO)_(VER).abc'
                    camera_asset_loc_path: '<root>/(SHOT)_(PLATE)_(ASSET_LOC)_(VER).abc'
                    camera_asset_key_path: '<root>/(SHOT)_(PLATE)_(ASSET_KEY)_(VER).json'
                    camera_asset_key_abc_path: '<root>/(SHOT)_(PLATE)_(ASSET_KEY)_(VER).abc'                                        
                    imageplane_json_path: '<root>/(SHOT)_(PLATE)_imageplane_(VER).json'
                    imageplane_path: '<root>/(SHOT)_(PLATE)_imageplane_(VER).abc'
                    panzoom_json_path: '<root>/(SHOT)_(PLATE)_panzoom_(VER).json'
                    panzoom_nuke_path: '<root>/(SHOT)_(PLATE)_panzoom_(VER).nk'
                    maya_dev_file: '<shot_path>/(TEAM)/dev/scenes/(SHOT)_(PLATE)_matchmove_(VER)_(WORK_VER).mb'
                    maya_pub_file: '<root>/(SHOT)_(PLATE)_(TEAM)_(VER).mb'
                    dxc_path: '<root>/camera_dxc_(DB_ID).dxc'

            ani_camera:
                __product__:
                    root: '<shot_path>/(TASK)/(PUBDEV)/data/cam'
                    path: '<root>/(SHOT)_(TASK)_(VER)'
                    camera_path: '<root>/(SHOT)_(TASK)_camera.abc'
                    camera_imageplane: '<root>/(SHOT)_(TASK)_camera.imageplane'
                    imageplane_path: '<root>/(SHOT)_(TASK)_imageplane.abc'
                    camera_dxc_path: '<root>/(SHOT)_(TASK)_camera.dxc'

    distortion:
        __flag__:
            PLATE :
                __default__: 'main1'                
            
        __product__:
            root: '<pub_path>/distortion'
            3de_dev_file: '<shot_path>/matchmove/dev/3de/(SHOT)_(PLATE)_matchmove_(VER).3de'
            path: '<root>/(SHOT)_(PLATE)_distort_(VER).nk'
            
    imageplane:
        __flag__:
            EXT:
                __default__: 'jpg' # or png

            PLATE :
                __default__: 'main1'
                                
            RES :
                __default__: 'lo'
                __pattern__: '[a-z]+'

            
        __product__:
            root: '<pub_path>/imageplane'
            path: '<shot_path>/matchmove/(PUBDEV)/imageplane/(PLATE)/(RES)/(SHOT)_(PLATE)_(RES)_(VER).(FRAME).(EXT)'
#            path: '<root>/(PLATE)/(VER)/(RES)/(SHOT)_(PLATE)_(RES)_(VER).(FRAME).(EXT)'

    layout:
        __flag__:
            ASSET : 
                __default__: 'assetname'
                
        __product__:
            root: '<shot_path>/(TASK)/pub/data/layout'
            path: '<root>/(SHOT)_(TASK)_(VER)'
            
    geoCache:
        __flag__:
            NAMESPACE :
                __default__: 'namespace'

            ASSET : 
                __default__: 'assetname'
                
        __product__:
            root: '<shot_path>/(TASK)/pub/data/geoCache'
            path: '<root>/(SHOT)_(TASK)_(VER)'
            render_path: '<root>/(SHOT)_(VER)/(NAMESPACE):(ASSET)_rig_GRP.abc'
            mid_path: '<root>/(SHOT)_(VER)/(NAMESPACE):(ASSET)_rig_GRP_mid.abc'
            low_path: '<root>/(SHOT)_(VER)/(NAMESPACE):(ASSET)_rig_GRP_low.abc'
            sim_path: '<root>/(SHOT)_(TASK)_(VER)/(NAMESPACE):(ASSET)_rig_GRP_sim.abc'
            bbox_path: '<root>/(SHOT)_(TASK)_(VER)/(NAMESPACE):(ASSET)_rig_GRP.bbox'
            world_path: '<root>/(SHOT)_(TASK)_(VER)/(NAMESPACE):(ASSET)_rig_GRP.wrd'
            json_path: '<shot_path>/(TASK)/pub/data/(SHOT)_(TASK)_(VER).json'
            
    hair:
        __flag__:
            NAMESPACE : 
                __default__: 'namespace'

            ASSET : 
                __default__: 'assetname'
            
        __product__:
            root: '<shot_path>/hair/pub/data/zenn'
            path: '<root>/(SHOT)_(TASK)_hair_(VER)'

    zenn:
        __flag__:
            NAMESPACE : 
                __default__: 'namespace'

            ASSET : 
                __default__: 'assetname'
            
        __product__:
            root: '<shot_path>/(TASK)/pub/data/zenn'
            path: '<root>/(SHOT)_(TASK)_zenn_(VER)'

    lighting:
        __flag__:
            ASSET :
                __default__: 'assetname'
                __pattern__: '[a-zA-Z0-9_]+'

            TYPE :
                __default__: 'type'
                __pattern__: 'char|prop|env|vehicle'

            LOW :
                __default__: ''
                __pattern__: '|_low'

            DATA :
                __default__: 'DATA'
                __pattern__: '\/|[a-zA-Z0-9_]+'

        __product__:
            asset_path: '/show/(PROJECT)/asset'
            asset_full_path: '<asset_path>/(TYPE)/(ASSET)'
            asset_ver_name: '(ASSET)_model(LOW)_(VER)'

        __child__:
            env_assembly:
                __product__:
                    root: '/show/(PROJECT)/asset/env/(ASSET)/lighting/pub/Assembly/(DATA)'
                    shot: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/lighting/pub/Assembly/(DATA)'

    asset:
        __flag__:
            ASSET :
                __default__: 'assetname'
                __pattern__: '[a-zA-Z0-9_]+'
            TYPE :
                __default__: 'type'
                __pattern__: 'char|prop|env|vehicle'
            LOW :
                __default__: ''
                __pattern__: '|_low'

            DATA :
                __default__: 'DATA'
                __pattern__: '\/|[a-zA-Z0-9_]+'

        __product__:
            asset_path: '/show/(PROJECT)/asset'
            asset_full_path: '<asset_path>/(TYPE)/(ASSET)'
            asset_ver_name: '(ASSET)_model(LOW)_(VER)'

        __child__:
            shot:
                __product__:
                    root: '<shot_path>/model/(PUBDEV)/scenes/(SHOT)_model(LOW)_(VER)'
                    model_abc_path: '<root>/(SHOT)_model(LOW)_(VER).abc'
                    model_json_path: '<root>/(SHOT)_model(LOW)_(VER).json'
                    model_tex_abc_path: '<root>/(SHOT)_model(LOW)_(VER).abc'
                    model_tex_json_path: '<root>/(SHOT)_model(LOW)_(VER).json'
                    model_scene_path: '<root>/(SHOT)_model(LOW)_(VER).mb'
                    model_scene_json_path: '<root>/(SHOT)_model(LOW)_(VER).json'

            model:
                __child__:
                    basic:
                        __product__:
                            root: '<asset_path>/(TYPE)/(ASSET)/model/(PUBDEV)/scenes/<asset_ver_name>'
                            tex_root: '<asset_path>/(TYPE)/(ASSET)/model/(PUBDEV)/scenes/<asset_ver_name>'
                            model_abc_path: '<root>.abc'
                            model_json_path: '<root>.json'
                            model_tex_abc_path: '<tex_root>/scenes/<asset_ver_name>_tx.abc'
                            model_tex_json_path: '<tex_root>/scenes/<asset_ver_name>_tx.json'
                            model_scene_path: '<root>.mb'
                            model_scene_json_path: '<root>.json'

                    env_data:
                        __flag__:
                            DATANAME :
                                __default__: 'dataName'
                                __pattern__: '[a-zA-Z0-9]+'
                            DATANAME_ :
                                __default__: 'dataName_'
                                __pattern__: '[a-zA-Z0-9]+'

                        __product__:
                            root: '<asset_path>/(TYPE)/(ASSET)/model/(PUBDEV)/data/abc/(DATANAME)/(DATANAME_)/(DATANAME_)_model(LOW)_(VER)'
                            tex_root: '<asset_path>/(TYPE)/(ASSET)/model/(PUBDEV)/data/abc/(DATANAME)/(DATANAME_)/(DATANAME_)_model(LOW)_(VER)'
                            model_abc_path: '<root>.abc'
                            model_json_path: '<root>.json'
                            model_tex_abc_path: '<tex_root>_tx.abc'
                            model_tex_json_path: '<tex_root>_tx.json'
                            model_scene_path: '<root>.mb'
                            model_scene_json_path: '<root>.json'

                    zenv_data:
                        __flag__:
                            SOURCE :
                                __default__: 'source_name'
                                __pattern__: '[a-zA-Z0-9_]+'

                        __product__:
                            root: '<asset_path>/(TYPE)/(ASSET)/model/(PUBDEV)/zenv/abc/(SOURCE)/model/(SOURCE)_model(LOW)_(VER)'
                            tex_root: '<asset_path>/(TYPE)/(ASSET)/texture/(PUBDEV)/zenv/abc/(SOURCE)/texture/(SOURCE)_model(LOW)_(VER)'
                            model_abc_path: '<root>.abc'
                            model_json_path: '<root>.json'
                            model_tex_abc_path: '<tex_root>_tx.abc'
                            model_tex_json_path: '<tex_root>_tx.json'
                            model_scene_path: '<root>.mb'
                            model_scene_json_path: '<root>.json'

                    zenn_data:
                        __product__:
                            root: '<asset_full_path>/hair/(PUBDEV)/scenes/(ASSET)_hair(LOW)_(VER)'
                            model_scene_path: '<root>.mb'
                            model_scene_json_path: '<root>.json'

                    zenn_scene_data:
                        __product__:
                            root: '<shot_path>/hair/(PUBDEV)/scenes/(SHOT)_hair(LOW)_(VER)'
                            model_scene_path: '<root>.mb'
                            model_scene_json_path: '<root>.json'

            env_assembly:
                __product__:
                    root: '<asset_full_path>/model/(PUBDEV)/envlayout/(DATA)'
                    shot: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/model/pub/envlayout/(DATA)'
                    assembly_path: '<root>/envlayout/(DATA)/(ASSET)_model_(VER)_GRP.asb'

            zenv_cache:
                __product__:
                    root: '<asset_full_path>/model/(PUBDEV)/zenv/cache'
                    shot: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/model/(PUBDEV)/zenv/cache'
                    scene: '<asset_full_path>/model/(PUBDEV)/zenv/scenes/(ASSET)_model_(VER).mb'

            texture:
                __product__:
                    root: '<asset_path>/(TYPE)/(ASSET)/texture/pub'
                    decode_path: '<root>/(VER)'
                    shot_path: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/texture/pub/(VER)'
                    texture_jpg_dir_path: '<root>/(VER)/'
                    texture_tex_dir_path: '<root>/tex/(VER)/'
                    texture_proxy_dir_path: '<root>/proxy/(VER)/'
                    texture_asset_jpg_dir_path: '<root>/(VER)/'
                    texture_asset_tex_dir_path: '<root>/tex/(VER)/'
                    texture_asset_proxy_dir_path: '<root>/proxy/(VER)/'
                    texture_shot_jpg_dir_path: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/texture/pub/(VER)'
                    texture_shot_tex_dir_path: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/texture/pub/tex/(VER)'
                    texture_shot_proxy_dir_path: '/show/(PROJECT)/shot/(SEQUENCE)/(SHOT)/texture/pub/proxy/(VER)'

            shader:
                __flag__:
                    TX :
                        __default__: 'tx'
                        __pattern__: 'tx|'
                __product__:
                    root: '<asset_path>/shaders/(ASSET)/(TX)(VER)'
                    shader_json_path: '<root>/at/(ASSET)_(TX)(VER).json'
                    shader_ma_path: '<root>/rfm/(ASSET)_(TX)(VER).ma'
                    shader_xml_path: '<root>/rfm/(ASSET)_(TX)(VER).xml'
