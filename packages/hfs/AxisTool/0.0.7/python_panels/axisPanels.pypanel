<?xml version="1.0" encoding="UTF-8"?>
<pythonPanelDocument>
  <!-- This file contains definitions of Python interfaces and the
 interfaces menu.  It should not be hand-edited when it is being
 used by the application.  Note, that two definitions of the
 same interface or of the interfaces menu are not allowed
 in a single file. -->
  <interface name="texManager" label="Texture Manager" icon="MISC_python" showNetworkNavigationBar="false" help_url="">
    <script><![CDATA[from tex import manager
def onCreateInterface():
    return manager.axisFileReplace()]]></script>
    <includeInPaneTabMenu menu_position="1234" create_separator="true"/>
    <help><![CDATA[]]></help>
  </interface>
  <interface name="takeManager" label="Take Manager" icon="MISC_python" showNetworkNavigationBar="false" help_url="">
    <script><![CDATA[from take import manager as axisQt
reload(axisQt)

def onCreateInterface():
    global manager
    manager = axisQt.takeManager()
    return manager
    
def onDestroyInterface():
  manager.onDeactivate()
]]></script>
    <includeInPaneTabMenu menu_position="12344" create_separator="false"/>
    <help><![CDATA[]]></help>
  </interface>
  <interface name="ViewerStateBrowser" label="Viewer State Browser" icon="MISC_python" showNetworkNavigationBar="false" help_url="">
    <script><![CDATA[########################################################################
# The 'hutil.Qt' is for internal-use only.
# It is a wrapper module that enables the sample code below to work with
# either a Qt4 or Qt5 environment for backwards-compatibility.
#
# When developing your own Python Panel, import directly from PySide2
# or PyQt5 instead of from 'hutil.Qt'.
########################################################################

from viewerstate import browser
reload(browser)

theBrowser = None

def onCreateInterface():
  global theBrowser
  theBrowser = browser.ViewerStateBrowser()
  return theBrowser

def onActivateInterface():
  global theBrowser
  theBrowser.onActivate()

def onDeactivateInterface():
  global theBrowser
  theBrowser.onDeactivate()

def onDestroyInterface():
  global theBrowser
  theBrowser.onDestroy()

]]></script>
    <includeInPaneTabMenu menu_position="0" create_separator="false"/>
    <includeInToolbarMenu menu_position="103" create_separator="false"/>
    <help><![CDATA[]]></help>
  </interface>
  <interface name="activateOverlay" label="Activate Overlay" icon="MISC_python" showNetworkNavigationBar="false" help_url="">
    <script><![CDATA[from drop import dropoverlay
reload(dropoverlay)
def onCreateInterface():
    return dropoverlay.activatePanel()]]></script>
    <includeInPaneTabMenu menu_position="12341234" create_separator="false"/>
    <includeInToolbarMenu menu_position="105" create_separator="false"/>
    <help><![CDATA[]]></help>
  </interface>
</pythonPanelDocument>
