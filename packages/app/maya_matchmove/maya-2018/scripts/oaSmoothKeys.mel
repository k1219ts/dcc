/* This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: oaSmoothKeys
''    Author: TopsoilArts 
''    Last Updated: Dec 30, 2007
''    Update/Change this file at:
''    http://Highend3d.com/maya/downloads/mel_scripts/animation/1846.html
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/
/*
===========================================================================

<NAME> oaSmoothKeys.mel </NAME>
<VERSION> v1.0 </VERSION>
<AUTHORS> Oleg Alexander (olegalexander@gmail.com) </AUTHORS>

<DESCRIPTION>

Averages selected keys with their neighbors. Perfect for animation cleanup and
for smoothing jittery mocap data. (Simplify Curve is not the same thing!)
</DESCRIPTION>

<TO_USE>

	o Select at least 3 keys in the Graph Editor.
	o Execute 'oaSmoothKeys'.
	o Repeat as necessary. </TO_USE>

<HISTORY>

	v1.0 (Sunday, December 30, 2007)
		o Original Release </HISTORY>

IF YOU ENJOY THIS MEL SCRIPT, PLEASE RATE IT. I WOULD APPRECIATE IT. THANK YOU!
===========================================================================

*/

global proc oaSmoothKeys () {

	//Get the selected curves
	string $curves[] = `keyframe -q -name`;
	if (`size $curves` == 0) error "Select at least 3 keys in the Graph Editor.";

	//Go
	float $prevKeyVal[];
	float $currKeyVal[];
	float $nextKeyVal[];
	float $average;
	float $keys[];
	int $sizeOfKeys;

	for ($curve in $curves) {

	    //Get the selected keys
		$keys = `keyframe -q -sl $curve`;
		$sizeOfKeys = `size $keys`;
		
		//The first and last key will not be touched.
		//Therefore there must be at least 3 keys selected.
		if ($sizeOfKeys < 3) continue;

		//Get the value of the first keyframe
		$prevKeyVal = `keyframe -time $keys[0] -q -vc $curve`;

		//Start with frame 2, don't touch last frame
		for ($i = 1; $i < $sizeOfKeys-1; $i++) {

			//Get the value of the current key
		    $currKeyVal = `keyframe -time $keys[$i] -q -vc $curve`;

			//Get the value of the next key
			$nextKeyVal = `keyframe -time $keys[$i+1] -q -vc $curve`;

		    //Calculate average
		    $average = ($prevKeyVal[0] + $currKeyVal[0] + $nextKeyVal[0]) / 3;
		    $prevKeyVal[0] = $average;

		    //Shift the current key absolutely
            keyframe -time $keys[$i] -absolute -valueChange $average $curve;
		}
	}
}
//oaSmoothKeys;
