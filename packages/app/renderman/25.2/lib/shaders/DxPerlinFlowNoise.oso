OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -v -o /WORK_DATA/develop/dcc/packages/app/renderman/25.2/lib/shaders/DxPerlinFlowNoise.oso -I/opt/pixar/RenderManProServer-25.2/include -I/WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl
shader FractalPerlinFlowNoise	%meta{string,description,"Fractal Perlin flow noise"} 
param	float	start_frequency	1		%meta{string,description,"Initial sampling position multiplier that affects the overall granularity."}  %read{26,26} %write{2147483647,-1}
param	vector	start_offset	0 0 0		%meta{string,description,"Offsets the initial sampling position effectively shifting the pattern in the specified direction."}  %read{27,27} %write{2147483647,-1}
param	float	flow	1		%meta{string,description,"The coordinate of a special noise dimension with a period of 1 that naturally evolves the noise to animate it instead of sliding a 3D slice throught the noise space."}  %read{30,1938} %write{2147483647,-1}
param	float	lacunarity	2		%meta{string,description,"Position (frequency) multiplier per iteration."}  %read{2081,2081} %write{2147483647,-1}
param	float	flow_rate	1		%meta{string,description,"Flow coordinate multiplier per iteration."}  %read{2082,2082} %write{2147483647,-1}
param	float	gain	0.5		%meta{string,description,"Amplitude multiplier per iteration."}  %read{2083,2083} %write{2147483647,-1}
param	float	advect	0.5		%meta{string,description,"Both initial advection amount and advection multiplier per iteration."}  %read{32,2084} %write{2147483647,-1}
param	int	octaves	8		%meta{string,description,"Number of fractal iterations."}  %read{35,35} %write{2147483647,-1}
param	float	attenuation	1		%meta{string,description,"The power of the falloff applied to the final result."}  %read{2089,2089} %write{2147483647,-1}
param	struct Manifold	manifold			%meta{string,page,""} %meta{string,widget,"default"} %meta{string,readOnly,"True"}  %read{0,0} %write{2147483647,-1} %struct{"Manifold"} %structfields{Q,QN,Qradius} %structfieldtypes{"pnf"} %structnfields{3}
param	point	manifold.Q	0 0 0		%meta{string,page,""} %meta{string,widget,"default"} %meta{string,readOnly,"True"}  %read{22,22} %write{2147483647,-1} %mystruct{manifold} %mystructfield{0}
param	normal	manifold.QN	0 0 1		%meta{string,page,""} %meta{string,widget,"default"} %meta{string,readOnly,"True"}  %read{23,23} %write{2147483647,-1} %mystruct{manifold} %mystructfield{1}
param	float	manifold.Qradius	0		%meta{string,page,""} %meta{string,widget,"default"} %meta{string,readOnly,"True"}  %read{24,24} %write{2147483647,-1} %mystruct{manifold} %mystructfield{2}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{2090,2090}
global	point	P	%read{4,4} %write{2147483647,-1}
global	normal	N	%read{5,5} %write{2147483647,-1}
local	vector	___392_vec1	%read{15,16} %write{14,15}
local	float	___392_scale	%read{19,19} %write{18,18}
local	int[512]	___420_perm	%read{35,2085} %write{35,2085}
local	float	___420_a	%read{35,2085} %write{35,2085}
local	vector[16]	___420_gradientUBase	%read{35,2085} %write{35,2085}
local	vector[16]	___420_gradientVBase	%read{35,2085} %write{35,2085}
local	int	___421_safeIndex	%read{35,2085} %write{35,2085}
local	vector	___421_gradientU	%read{35,2085} %write{35,2085}
local	vector	___421_gradientV	%read{35,2085} %write{35,2085}
local	vector	___422_gradient	%read{35,2085} %write{35,2085}
local	vector	___422_value	%read{35,2085} %write{35,2085}
local	float	___420_x	%read{35,2085} %write{35,2085}
local	float	___420_y	%read{35,2085} %write{35,2085}
local	float	___420_z	%read{35,2085} %write{35,2085}
local	int	___420_ix	%read{35,2085} %write{35,2085}
local	int	___420_iy	%read{35,2085} %write{35,2085}
local	int	___420_iz	%read{35,2085} %write{35,2085}
local	float	___420_fx	%read{35,2085} %write{35,2085}
local	float	___420_fy	%read{35,2085} %write{35,2085}
local	float	___420_fz	%read{35,2085} %write{35,2085}
local	float	___420_i	%read{35,2085} %write{35,2085}
local	float	___420_j	%read{35,2085} %write{35,2085}
local	float	___420_k	%read{35,2085} %write{35,2085}
local	int	___420_A	%read{35,2085} %write{35,2085}
local	int	___420_AA	%read{35,2085} %write{35,2085}
local	int	___420_AB	%read{35,2085} %write{35,2085}
local	int	___420_B	%read{35,2085} %write{35,2085}
local	int	___420_BA	%read{35,2085} %write{35,2085}
local	int	___420_BB	%read{35,2085} %write{35,2085}
local	float	___420_sinTheta	%read{35,2085} %write{35,2085}
local	float	___420_cosTheta	%read{35,2085} %write{35,2085}
local	float	___420_noiseValue	%read{35,2085} %write{35,2085}
local	vector	___423_result	%read{35,2085} %write{35,2085}
local	float	___424_noiseValue	%read{35,2086} %write{29,2085}
local	float	___424_flowValue	%read{35,2085} %write{30,2085}
local	float	___424_amplitude	%read{35,2085} %write{31,2085}
local	float	___424_advectionAmount	%read{35,2085} %write{32,2085}
local	int	___425_octave	%read{35,2085} %write{34,2085}
local	float	___426_noiseOctave	%read{35,2085} %write{35,2085}
local	point	inputManifoldRw.Q	%read{9,25} %write{4,22} %mystruct{inputManifoldRw} %mystructfield{0}
local	normal	inputManifoldRw.QN	%read{11,13} %write{5,23} %mystruct{inputManifoldRw} %mystructfield{1}
local	float	inputManifoldRw.Qradius	%read{19,20} %write{6,24} %mystruct{inputManifoldRw} %mystructfield{2}
local	point	objectPosition	%read{26,26} %write{25,25}
local	point	startPosition	%read{35,2085} %write{27,2085}
local	float	noiseValue	%read{2087,2090} %write{2086,2089}
temp	int	$tmp1	%read{1,1} %write{0,0}
temp	int	$tmp2	%read{2,2} %write{1,1}
const	int	$const1	0		%read{1,1879} %write{2147483647,-1}
const	string	$const2	"Manifold_Construct"		%read{3,3} %write{2147483647,-1}
const	float	$const3	0		%read{6,1937} %write{2147483647,-1}
const	string	$const4	"object"		%read{9,15} %write{2147483647,-1}
const	string	$const5	"Manifold_Transform"		%read{7,8} %write{2147483647,-1}
const	string	$const6	"common"		%read{9,15} %write{2147483647,-1}
temp	normal	$tmp3	%read{12,12} %write{11,11}
const	vector	$const7	1 1 1		%read{14,14} %write{2147483647,-1}
temp	float	$tmp4	%read{18,18} %write{16,16}
temp	float	$tmp5	%read{18,18} %write{17,17}
const	float	$const8	3		%read{17,17} %write{2147483647,-1}
const	string	$const9	"Manifold_Copy"		%read{21,21} %write{2147483647,-1}
temp	point	$tmp6	%read{27,27} %write{26,26}
const	string	$const10	"fractalPerlinFlowNoise3D"		%read{28,28} %write{2147483647,-1}
const	float	$const11	1		%read{31,2049} %write{2147483647,-1}
temp	int	$tmp7	%read{35,2085} %write{35,2085}
temp	int	$tmp8	%read{33,2085} %write{34,2085}
temp	float	$tmp9	%read{35,2085} %write{35,2085}
const	string	$const12	"perlinFlowNoise3D"		%read{37,1786} %write{2147483647,-1}
const	int[512]	$const13			%read{38,1787} %write{2147483647,-1}
const	float	$const14	0.816496551		%read{39,1788} %write{2147483647,-1}
const	vector	$const15	1 0 1		%read{40,1857} %write{2147483647,-1}
const	vector	$const16	0 1 1		%read{41,1790} %write{2147483647,-1}
const	int	$const17	1		%read{41,2085} %write{2147483647,-1}
const	vector	$const18	-1 0 1		%read{42,1858} %write{2147483647,-1}
const	int	$const19	2		%read{42,1863} %write{2147483647,-1}
const	vector	$const20	0 -1 1		%read{43,1792} %write{2147483647,-1}
const	int	$const21	3		%read{43,1836} %write{2147483647,-1}
const	vector	$const22	1 0 -1		%read{44,1793} %write{2147483647,-1}
const	int	$const23	4		%read{44,1841} %write{2147483647,-1}
const	vector	$const24	0 1 -1		%read{45,1859} %write{2147483647,-1}
const	int	$const25	5		%read{45,1845} %write{2147483647,-1}
const	vector	$const26	-1 0 -1		%read{46,1795} %write{2147483647,-1}
const	int	$const27	6		%read{46,1848} %write{2147483647,-1}
const	vector	$const28	0 -1 -1		%read{47,1860} %write{2147483647,-1}
const	int	$const29	7		%read{47,1852} %write{2147483647,-1}
temp	vector	$tmp18	%read{35,2085} %write{35,2085}
const	int	$const30	8		%read{49,1853} %write{2147483647,-1}
temp	vector	$tmp19	%read{35,2085} %write{35,2085}
temp	float	$tmp20	%read{35,2085} %write{35,2085}
temp	float	$tmp21	%read{35,2085} %write{35,2085}
const	int	$const31	9		%read{53,1854} %write{2147483647,-1}
temp	vector	$tmp22	%read{35,2085} %write{35,2085}
temp	float	$tmp23	%read{35,2085} %write{35,2085}
temp	float	$tmp24	%read{35,2085} %write{35,2085}
const	int	$const32	10		%read{57,1855} %write{2147483647,-1}
temp	vector	$tmp25	%read{35,2085} %write{35,2085}
temp	float	$tmp26	%read{35,2085} %write{35,2085}
temp	float	$tmp27	%read{35,2085} %write{35,2085}
const	int	$const33	11		%read{61,1856} %write{2147483647,-1}
temp	vector	$tmp28	%read{35,2085} %write{35,2085}
temp	float	$tmp29	%read{35,2085} %write{35,2085}
const	int	$const34	12		%read{64,1857} %write{2147483647,-1}
temp	vector	$tmp30	%read{35,2085} %write{35,2085}
temp	float	$tmp31	%read{35,2085} %write{35,2085}
const	int	$const35	13		%read{67,1858} %write{2147483647,-1}
temp	vector	$tmp32	%read{35,2085} %write{35,2085}
temp	float	$tmp33	%read{35,2085} %write{35,2085}
temp	float	$tmp34	%read{35,2085} %write{35,2085}
const	int	$const36	14		%read{71,1859} %write{2147483647,-1}
temp	vector	$tmp35	%read{35,2085} %write{35,2085}
temp	float	$tmp36	%read{35,2085} %write{35,2085}
temp	float	$tmp37	%read{35,2085} %write{35,2085}
const	int	$const37	15		%read{75,1860} %write{2147483647,-1}
temp	vector	$tmp38	%read{35,2085} %write{35,2085}
temp	float	$tmp39	%read{35,2085} %write{35,2085}
temp	vector	$tmp40	%read{35,2085} %write{35,2085}
temp	float	$tmp41	%read{35,2085} %write{35,2085}
temp	float	$tmp42	%read{35,2085} %write{35,2085}
temp	vector	$tmp43	%read{35,2085} %write{35,2085}
temp	float	$tmp44	%read{35,2085} %write{35,2085}
temp	vector	$tmp45	%read{35,2085} %write{35,2085}
temp	vector	$tmp46	%read{35,2085} %write{35,2085}
temp	float	$tmp47	%read{35,2085} %write{35,2085}
temp	float	$tmp48	%read{35,2085} %write{35,2085}
temp	float	$tmp49	%read{35,2085} %write{35,2085}
temp	vector	$tmp50	%read{35,2085} %write{35,2085}
temp	float	$tmp51	%read{35,2085} %write{35,2085}
temp	float	$tmp52	%read{35,2085} %write{35,2085}
temp	vector	$tmp53	%read{35,2085} %write{35,2085}
temp	float	$tmp54	%read{35,2085} %write{35,2085}
temp	vector	$tmp55	%read{35,2085} %write{35,2085}
temp	float	$tmp56	%read{35,2085} %write{35,2085}
temp	float	$tmp57	%read{35,2085} %write{35,2085}
const	vector	$const38	1 -1 0		%read{104,1853} %write{2147483647,-1}
const	vector	$const39	1 1 0		%read{105,1854} %write{2147483647,-1}
const	vector	$const40	-1 1 0		%read{106,1855} %write{2147483647,-1}
const	vector	$const41	-1 -1 0		%read{107,1856} %write{2147483647,-1}
const	string	$const42	"fastFloor"		%read{115,1878} %write{2147483647,-1}
temp	int	$tmp66	%read{35,2085} %write{35,2085}
temp	int	$tmp67	%read{35,2085} %write{35,2085}
temp	int	$tmp68	%read{35,2085} %write{35,2085}
temp	int	$tmp69	%read{35,2085} %write{35,2085}
temp	int	$tmp70	%read{35,2085} %write{35,2085}
temp	int	$tmp71	%read{35,2085} %write{35,2085}
temp	float	$tmp72	%read{35,2085} %write{35,2085}
temp	float	$tmp73	%read{35,2085} %write{35,2085}
temp	float	$tmp74	%read{35,2085} %write{35,2085}
temp	float	$tmp75	%read{35,2085} %write{35,2085}
temp	float	$tmp76	%read{35,2085} %write{35,2085}
temp	float	$tmp77	%read{35,2085} %write{35,2085}
const	int	$const43	255		%read{145,1896} %write{2147483647,-1}
const	string	$const44	"fade"		%read{148,1913} %write{2147483647,-1}
temp	float	$tmp78	%read{35,2085} %write{35,2085}
temp	float	$tmp79	%read{35,2085} %write{35,2085}
const	float	$const45	6		%read{151,1916} %write{2147483647,-1}
temp	float	$tmp80	%read{35,2085} %write{35,2085}
const	float	$const46	15		%read{152,1917} %write{2147483647,-1}
temp	float	$tmp81	%read{35,2085} %write{35,2085}
temp	float	$tmp82	%read{35,2085} %write{35,2085}
const	float	$const47	10		%read{154,1919} %write{2147483647,-1}
temp	float	$tmp83	%read{35,2085} %write{35,2085}
temp	float	$tmp84	%read{35,2085} %write{35,2085}
temp	float	$tmp85	%read{35,2085} %write{35,2085}
temp	float	$tmp86	%read{35,2085} %write{35,2085}
temp	float	$tmp87	%read{35,2085} %write{35,2085}
temp	float	$tmp88	%read{35,2085} %write{35,2085}
temp	float	$tmp89	%read{35,2085} %write{35,2085}
temp	float	$tmp90	%read{35,2085} %write{35,2085}
temp	float	$tmp91	%read{35,2085} %write{35,2085}
temp	float	$tmp92	%read{35,2085} %write{35,2085}
temp	float	$tmp93	%read{35,2085} %write{35,2085}
temp	float	$tmp94	%read{35,2085} %write{35,2085}
temp	float	$tmp95	%read{35,2085} %write{35,2085}
temp	int	$tmp96	%read{35,2085} %write{35,2085}
temp	int	$tmp97	%read{35,2085} %write{35,2085}
temp	int	$tmp98	%read{35,2085} %write{35,2085}
temp	int	$tmp99	%read{35,2085} %write{35,2085}
temp	int	$tmp100	%read{35,2085} %write{35,2085}
temp	int	$tmp101	%read{35,2085} %write{35,2085}
temp	int	$tmp102	%read{35,2085} %write{35,2085}
temp	int	$tmp103	%read{35,2085} %write{35,2085}
temp	int	$tmp104	%read{35,2085} %write{35,2085}
const	float	$const48	6.28318548		%read{189,1938} %write{2147483647,-1}
temp	float	$tmp105	%read{35,2085} %write{35,2085}
temp	float	$tmp106	%read{35,2085} %write{35,2085}
temp	float	$tmp107	%read{35,2085} %write{35,2085}
temp	float	$tmp108	%read{35,2085} %write{35,2085}
temp	int	$tmp109	%read{35,2085} %write{35,2085}
const	string	$const49	"gradientDot"		%read{192,2050} %write{2147483647,-1}
const	string	$const50	"getGradient"		%read{193,2051} %write{2147483647,-1}
const	int	$const51	16		%read{194,2052} %write{2147483647,-1}
temp	vector	$tmp110	%read{35,2085} %write{35,2085}
temp	vector	$tmp111	%read{35,2085} %write{35,2085}
temp	float	$tmp112	%read{35,2085} %write{35,2085}
temp	int	$tmp113	%read{35,2085} %write{35,2085}
temp	float	$tmp114	%read{35,2085} %write{35,2085}
temp	vector	$tmp115	%read{35,2085} %write{35,2085}
temp	vector	$tmp116	%read{35,2085} %write{35,2085}
const	string	$const52	"lerp"		%read{214,2068} %write{2147483647,-1}
temp	float	$tmp117	%read{35,2085} %write{35,2085}
temp	float	$tmp118	%read{35,2085} %write{35,2085}
temp	float	$tmp119	%read{35,2085} %write{35,2085}
temp	float	$tmp120	%read{35,2085} %write{35,2085}
temp	int	$tmp121	%read{35,2085} %write{35,2085}
temp	float	$tmp122	%read{35,2085} %write{35,2085}
temp	vector	$tmp123	%read{35,2085} %write{35,2085}
temp	vector	$tmp124	%read{35,2085} %write{35,2085}
temp	float	$tmp125	%read{35,2085} %write{35,2085}
temp	int	$tmp126	%read{35,2085} %write{35,2085}
temp	float	$tmp127	%read{35,2085} %write{35,2085}
temp	float	$tmp128	%read{35,2085} %write{35,2085}
temp	vector	$tmp129	%read{35,2085} %write{35,2085}
temp	vector	$tmp130	%read{35,2085} %write{35,2085}
temp	float	$tmp131	%read{35,2085} %write{35,2085}
temp	float	$tmp132	%read{35,2085} %write{35,2085}
temp	float	$tmp133	%read{35,2085} %write{35,2085}
temp	float	$tmp134	%read{35,2085} %write{35,2085}
temp	float	$tmp135	%read{35,2085} %write{35,2085}
temp	float	$tmp136	%read{35,2085} %write{35,2085}
temp	float	$tmp137	%read{35,2085} %write{35,2085}
temp	int	$tmp138	%read{35,2085} %write{35,2085}
temp	int	$tmp139	%read{35,2085} %write{35,2085}
temp	float	$tmp140	%read{35,2085} %write{35,2085}
temp	vector	$tmp141	%read{35,2085} %write{35,2085}
temp	vector	$tmp142	%read{35,2085} %write{35,2085}
temp	float	$tmp143	%read{35,2085} %write{35,2085}
temp	int	$tmp144	%read{35,2085} %write{35,2085}
temp	int	$tmp145	%read{35,2085} %write{35,2085}
temp	float	$tmp146	%read{35,2085} %write{35,2085}
temp	float	$tmp147	%read{35,2085} %write{35,2085}
temp	vector	$tmp148	%read{35,2085} %write{35,2085}
temp	vector	$tmp149	%read{35,2085} %write{35,2085}
temp	float	$tmp150	%read{35,2085} %write{35,2085}
temp	float	$tmp151	%read{35,2085} %write{35,2085}
temp	float	$tmp152	%read{35,2085} %write{35,2085}
temp	float	$tmp153	%read{35,2085} %write{35,2085}
temp	int	$tmp154	%read{35,2085} %write{35,2085}
temp	int	$tmp155	%read{35,2085} %write{35,2085}
temp	float	$tmp156	%read{35,2085} %write{35,2085}
temp	float	$tmp157	%read{35,2085} %write{35,2085}
temp	vector	$tmp158	%read{35,2085} %write{35,2085}
temp	vector	$tmp159	%read{35,2085} %write{35,2085}
temp	float	$tmp160	%read{35,2085} %write{35,2085}
temp	int	$tmp161	%read{35,2085} %write{35,2085}
temp	int	$tmp162	%read{35,2085} %write{35,2085}
temp	float	$tmp163	%read{35,2085} %write{35,2085}
temp	float	$tmp164	%read{35,2085} %write{35,2085}
temp	float	$tmp165	%read{35,2085} %write{35,2085}
temp	vector	$tmp166	%read{35,2085} %write{35,2085}
temp	vector	$tmp167	%read{35,2085} %write{35,2085}
temp	float	$tmp168	%read{35,2085} %write{35,2085}
temp	float	$tmp169	%read{35,2085} %write{35,2085}
temp	float	$tmp170	%read{35,2085} %write{35,2085}
temp	float	$tmp171	%read{35,2085} %write{35,2085}
temp	float	$tmp172	%read{35,2085} %write{35,2085}
temp	float	$tmp173	%read{35,2085} %write{35,2085}
const	float	$const53	0.5		%read{323,2088} %write{2147483647,-1}
temp	float	$tmp174	%read{35,2085} %write{35,2085}
temp	float	$tmp175	%read{35,2085} %write{35,2085}
temp	int	$tmp176	%read{35,2085} %write{35,2085}
temp	float	$tmp177	%read{35,2085} %write{35,2085}
temp	vector	$tmp178	%read{35,2085} %write{35,2085}
const	float	$const54	0.00999999978		%read{332,2076} %write{2147483647,-1}
const	string	$const55	"perlinFlowNoise3DGradient"		%read{331,331} %write{2147483647,-1}
temp	float	$tmp179	%read{35,2085} %write{35,2085}
temp	vector	$tmp180	%read{35,2085} %write{35,2085}
temp	vector	$tmp181	%read{35,2085} %write{35,2085}
temp	vector	$tmp190	%read{35,2085} %write{35,2085}
temp	vector	$tmp191	%read{35,2085} %write{35,2085}
temp	float	$tmp192	%read{35,2085} %write{35,2085}
temp	float	$tmp193	%read{35,2085} %write{35,2085}
temp	vector	$tmp194	%read{35,2085} %write{35,2085}
temp	float	$tmp195	%read{35,2085} %write{35,2085}
temp	float	$tmp196	%read{35,2085} %write{35,2085}
temp	vector	$tmp197	%read{35,2085} %write{35,2085}
temp	float	$tmp198	%read{35,2085} %write{35,2085}
temp	float	$tmp199	%read{35,2085} %write{35,2085}
temp	vector	$tmp200	%read{35,2085} %write{35,2085}
temp	float	$tmp201	%read{35,2085} %write{35,2085}
temp	vector	$tmp202	%read{35,2085} %write{35,2085}
temp	float	$tmp203	%read{35,2085} %write{35,2085}
temp	vector	$tmp204	%read{35,2085} %write{35,2085}
temp	float	$tmp205	%read{35,2085} %write{35,2085}
temp	float	$tmp206	%read{35,2085} %write{35,2085}
temp	vector	$tmp207	%read{35,2085} %write{35,2085}
temp	float	$tmp208	%read{35,2085} %write{35,2085}
temp	float	$tmp209	%read{35,2085} %write{35,2085}
temp	vector	$tmp210	%read{35,2085} %write{35,2085}
temp	float	$tmp211	%read{35,2085} %write{35,2085}
temp	vector	$tmp212	%read{35,2085} %write{35,2085}
temp	float	$tmp213	%read{35,2085} %write{35,2085}
temp	float	$tmp214	%read{35,2085} %write{35,2085}
temp	vector	$tmp215	%read{35,2085} %write{35,2085}
temp	float	$tmp216	%read{35,2085} %write{35,2085}
temp	vector	$tmp217	%read{35,2085} %write{35,2085}
temp	vector	$tmp218	%read{35,2085} %write{35,2085}
temp	float	$tmp219	%read{35,2085} %write{35,2085}
temp	float	$tmp220	%read{35,2085} %write{35,2085}
temp	float	$tmp221	%read{35,2085} %write{35,2085}
temp	vector	$tmp222	%read{35,2085} %write{35,2085}
temp	float	$tmp223	%read{35,2085} %write{35,2085}
temp	float	$tmp224	%read{35,2085} %write{35,2085}
temp	vector	$tmp225	%read{35,2085} %write{35,2085}
temp	float	$tmp226	%read{35,2085} %write{35,2085}
temp	vector	$tmp227	%read{35,2085} %write{35,2085}
temp	float	$tmp228	%read{35,2085} %write{35,2085}
temp	float	$tmp229	%read{35,2085} %write{35,2085}
temp	int	$tmp238	%read{35,2085} %write{35,2085}
temp	int	$tmp239	%read{35,2085} %write{35,2085}
temp	int	$tmp240	%read{35,2085} %write{35,2085}
temp	int	$tmp241	%read{35,2085} %write{35,2085}
temp	int	$tmp242	%read{35,2085} %write{35,2085}
temp	int	$tmp243	%read{35,2085} %write{35,2085}
temp	float	$tmp244	%read{35,2085} %write{35,2085}
temp	float	$tmp245	%read{35,2085} %write{35,2085}
temp	float	$tmp246	%read{35,2085} %write{35,2085}
temp	float	$tmp247	%read{35,2085} %write{35,2085}
temp	float	$tmp248	%read{35,2085} %write{35,2085}
temp	float	$tmp249	%read{35,2085} %write{35,2085}
temp	float	$tmp250	%read{35,2085} %write{35,2085}
temp	float	$tmp251	%read{35,2085} %write{35,2085}
temp	float	$tmp252	%read{35,2085} %write{35,2085}
temp	float	$tmp253	%read{35,2085} %write{35,2085}
temp	float	$tmp254	%read{35,2085} %write{35,2085}
temp	float	$tmp255	%read{35,2085} %write{35,2085}
temp	float	$tmp256	%read{35,2085} %write{35,2085}
temp	float	$tmp257	%read{35,2085} %write{35,2085}
temp	float	$tmp258	%read{35,2085} %write{35,2085}
temp	float	$tmp259	%read{35,2085} %write{35,2085}
temp	float	$tmp260	%read{35,2085} %write{35,2085}
temp	float	$tmp261	%read{35,2085} %write{35,2085}
temp	float	$tmp262	%read{35,2085} %write{35,2085}
temp	float	$tmp263	%read{35,2085} %write{35,2085}
temp	float	$tmp264	%read{35,2085} %write{35,2085}
temp	float	$tmp265	%read{35,2085} %write{35,2085}
temp	float	$tmp266	%read{35,2085} %write{35,2085}
temp	float	$tmp267	%read{35,2085} %write{35,2085}
temp	int	$tmp268	%read{35,2085} %write{35,2085}
temp	int	$tmp269	%read{35,2085} %write{35,2085}
temp	int	$tmp270	%read{35,2085} %write{35,2085}
temp	int	$tmp271	%read{35,2085} %write{35,2085}
temp	int	$tmp272	%read{35,2085} %write{35,2085}
temp	int	$tmp273	%read{35,2085} %write{35,2085}
temp	int	$tmp274	%read{35,2085} %write{35,2085}
temp	int	$tmp275	%read{35,2085} %write{35,2085}
temp	int	$tmp276	%read{35,2085} %write{35,2085}
temp	float	$tmp277	%read{35,2085} %write{35,2085}
temp	float	$tmp278	%read{35,2085} %write{35,2085}
temp	float	$tmp279	%read{35,2085} %write{35,2085}
temp	float	$tmp280	%read{35,2085} %write{35,2085}
temp	int	$tmp281	%read{35,2085} %write{35,2085}
temp	vector	$tmp282	%read{35,2085} %write{35,2085}
temp	vector	$tmp283	%read{35,2085} %write{35,2085}
temp	float	$tmp284	%read{35,2085} %write{35,2085}
temp	int	$tmp285	%read{35,2085} %write{35,2085}
temp	float	$tmp286	%read{35,2085} %write{35,2085}
temp	vector	$tmp287	%read{35,2085} %write{35,2085}
temp	vector	$tmp288	%read{35,2085} %write{35,2085}
temp	float	$tmp289	%read{35,2085} %write{35,2085}
temp	float	$tmp290	%read{35,2085} %write{35,2085}
temp	float	$tmp291	%read{35,2085} %write{35,2085}
temp	float	$tmp292	%read{35,2085} %write{35,2085}
temp	int	$tmp293	%read{35,2085} %write{35,2085}
temp	float	$tmp294	%read{35,2085} %write{35,2085}
temp	vector	$tmp295	%read{35,2085} %write{35,2085}
temp	vector	$tmp296	%read{35,2085} %write{35,2085}
temp	float	$tmp297	%read{35,2085} %write{35,2085}
temp	int	$tmp298	%read{35,2085} %write{35,2085}
temp	float	$tmp299	%read{35,2085} %write{35,2085}
temp	float	$tmp300	%read{35,2085} %write{35,2085}
temp	vector	$tmp301	%read{35,2085} %write{35,2085}
temp	vector	$tmp302	%read{35,2085} %write{35,2085}
temp	float	$tmp303	%read{35,2085} %write{35,2085}
temp	float	$tmp304	%read{35,2085} %write{35,2085}
temp	float	$tmp305	%read{35,2085} %write{35,2085}
temp	float	$tmp306	%read{35,2085} %write{35,2085}
temp	float	$tmp307	%read{35,2085} %write{35,2085}
temp	float	$tmp308	%read{35,2085} %write{35,2085}
temp	float	$tmp309	%read{35,2085} %write{35,2085}
temp	int	$tmp310	%read{35,2085} %write{35,2085}
temp	int	$tmp311	%read{35,2085} %write{35,2085}
temp	float	$tmp312	%read{35,2085} %write{35,2085}
temp	vector	$tmp313	%read{35,2085} %write{35,2085}
temp	vector	$tmp314	%read{35,2085} %write{35,2085}
temp	float	$tmp315	%read{35,2085} %write{35,2085}
temp	int	$tmp316	%read{35,2085} %write{35,2085}
temp	int	$tmp317	%read{35,2085} %write{35,2085}
temp	float	$tmp318	%read{35,2085} %write{35,2085}
temp	float	$tmp319	%read{35,2085} %write{35,2085}
temp	vector	$tmp320	%read{35,2085} %write{35,2085}
temp	vector	$tmp321	%read{35,2085} %write{35,2085}
temp	float	$tmp322	%read{35,2085} %write{35,2085}
temp	float	$tmp323	%read{35,2085} %write{35,2085}
temp	float	$tmp324	%read{35,2085} %write{35,2085}
temp	float	$tmp325	%read{35,2085} %write{35,2085}
temp	int	$tmp326	%read{35,2085} %write{35,2085}
temp	int	$tmp327	%read{35,2085} %write{35,2085}
temp	float	$tmp328	%read{35,2085} %write{35,2085}
temp	float	$tmp329	%read{35,2085} %write{35,2085}
temp	vector	$tmp330	%read{35,2085} %write{35,2085}
temp	vector	$tmp331	%read{35,2085} %write{35,2085}
temp	float	$tmp332	%read{35,2085} %write{35,2085}
temp	int	$tmp333	%read{35,2085} %write{35,2085}
temp	int	$tmp334	%read{35,2085} %write{35,2085}
temp	float	$tmp335	%read{35,2085} %write{35,2085}
temp	float	$tmp336	%read{35,2085} %write{35,2085}
temp	float	$tmp337	%read{35,2085} %write{35,2085}
temp	vector	$tmp338	%read{35,2085} %write{35,2085}
temp	vector	$tmp339	%read{35,2085} %write{35,2085}
temp	float	$tmp340	%read{35,2085} %write{35,2085}
temp	float	$tmp341	%read{35,2085} %write{35,2085}
temp	float	$tmp342	%read{35,2085} %write{35,2085}
temp	float	$tmp343	%read{35,2085} %write{35,2085}
temp	float	$tmp344	%read{35,2085} %write{35,2085}
temp	float	$tmp345	%read{35,2085} %write{35,2085}
temp	float	$tmp346	%read{35,2085} %write{35,2085}
temp	float	$tmp347	%read{35,2085} %write{35,2085}
temp	vector	$tmp348	%read{35,2085} %write{35,2085}
temp	vector	$tmp349	%read{35,2085} %write{35,2085}
temp	vector	$tmp358	%read{35,2085} %write{35,2085}
temp	vector	$tmp359	%read{35,2085} %write{35,2085}
temp	float	$tmp360	%read{35,2085} %write{35,2085}
temp	float	$tmp361	%read{35,2085} %write{35,2085}
temp	vector	$tmp362	%read{35,2085} %write{35,2085}
temp	float	$tmp363	%read{35,2085} %write{35,2085}
temp	float	$tmp364	%read{35,2085} %write{35,2085}
temp	vector	$tmp365	%read{35,2085} %write{35,2085}
temp	float	$tmp366	%read{35,2085} %write{35,2085}
temp	float	$tmp367	%read{35,2085} %write{35,2085}
temp	vector	$tmp368	%read{35,2085} %write{35,2085}
temp	float	$tmp369	%read{35,2085} %write{35,2085}
temp	vector	$tmp370	%read{35,2085} %write{35,2085}
temp	float	$tmp371	%read{35,2085} %write{35,2085}
temp	vector	$tmp372	%read{35,2085} %write{35,2085}
temp	float	$tmp373	%read{35,2085} %write{35,2085}
temp	float	$tmp374	%read{35,2085} %write{35,2085}
temp	vector	$tmp375	%read{35,2085} %write{35,2085}
temp	float	$tmp376	%read{35,2085} %write{35,2085}
temp	float	$tmp377	%read{35,2085} %write{35,2085}
temp	vector	$tmp378	%read{35,2085} %write{35,2085}
temp	float	$tmp379	%read{35,2085} %write{35,2085}
temp	vector	$tmp380	%read{35,2085} %write{35,2085}
temp	float	$tmp381	%read{35,2085} %write{35,2085}
temp	float	$tmp382	%read{35,2085} %write{35,2085}
temp	vector	$tmp383	%read{35,2085} %write{35,2085}
temp	float	$tmp384	%read{35,2085} %write{35,2085}
temp	vector	$tmp385	%read{35,2085} %write{35,2085}
temp	vector	$tmp386	%read{35,2085} %write{35,2085}
temp	float	$tmp387	%read{35,2085} %write{35,2085}
temp	float	$tmp388	%read{35,2085} %write{35,2085}
temp	float	$tmp389	%read{35,2085} %write{35,2085}
temp	vector	$tmp390	%read{35,2085} %write{35,2085}
temp	float	$tmp391	%read{35,2085} %write{35,2085}
temp	float	$tmp392	%read{35,2085} %write{35,2085}
temp	vector	$tmp393	%read{35,2085} %write{35,2085}
temp	float	$tmp394	%read{35,2085} %write{35,2085}
temp	vector	$tmp395	%read{35,2085} %write{35,2085}
temp	float	$tmp396	%read{35,2085} %write{35,2085}
temp	float	$tmp397	%read{35,2085} %write{35,2085}
temp	int	$tmp406	%read{35,2085} %write{35,2085}
temp	int	$tmp407	%read{35,2085} %write{35,2085}
temp	int	$tmp408	%read{35,2085} %write{35,2085}
temp	int	$tmp409	%read{35,2085} %write{35,2085}
temp	int	$tmp410	%read{35,2085} %write{35,2085}
temp	int	$tmp411	%read{35,2085} %write{35,2085}
temp	float	$tmp412	%read{35,2085} %write{35,2085}
temp	float	$tmp413	%read{35,2085} %write{35,2085}
temp	float	$tmp414	%read{35,2085} %write{35,2085}
temp	float	$tmp415	%read{35,2085} %write{35,2085}
temp	float	$tmp416	%read{35,2085} %write{35,2085}
temp	float	$tmp417	%read{35,2085} %write{35,2085}
temp	float	$tmp418	%read{35,2085} %write{35,2085}
temp	float	$tmp419	%read{35,2085} %write{35,2085}
temp	float	$tmp420	%read{35,2085} %write{35,2085}
temp	float	$tmp421	%read{35,2085} %write{35,2085}
temp	float	$tmp422	%read{35,2085} %write{35,2085}
temp	float	$tmp423	%read{35,2085} %write{35,2085}
temp	float	$tmp424	%read{35,2085} %write{35,2085}
temp	float	$tmp425	%read{35,2085} %write{35,2085}
temp	float	$tmp426	%read{35,2085} %write{35,2085}
temp	float	$tmp427	%read{35,2085} %write{35,2085}
temp	float	$tmp428	%read{35,2085} %write{35,2085}
temp	float	$tmp429	%read{35,2085} %write{35,2085}
temp	float	$tmp430	%read{35,2085} %write{35,2085}
temp	float	$tmp431	%read{35,2085} %write{35,2085}
temp	float	$tmp432	%read{35,2085} %write{35,2085}
temp	float	$tmp433	%read{35,2085} %write{35,2085}
temp	float	$tmp434	%read{35,2085} %write{35,2085}
temp	float	$tmp435	%read{35,2085} %write{35,2085}
temp	int	$tmp436	%read{35,2085} %write{35,2085}
temp	int	$tmp437	%read{35,2085} %write{35,2085}
temp	int	$tmp438	%read{35,2085} %write{35,2085}
temp	int	$tmp439	%read{35,2085} %write{35,2085}
temp	int	$tmp440	%read{35,2085} %write{35,2085}
temp	int	$tmp441	%read{35,2085} %write{35,2085}
temp	int	$tmp442	%read{35,2085} %write{35,2085}
temp	int	$tmp443	%read{35,2085} %write{35,2085}
temp	int	$tmp444	%read{35,2085} %write{35,2085}
temp	float	$tmp445	%read{35,2085} %write{35,2085}
temp	float	$tmp446	%read{35,2085} %write{35,2085}
temp	float	$tmp447	%read{35,2085} %write{35,2085}
temp	float	$tmp448	%read{35,2085} %write{35,2085}
temp	int	$tmp449	%read{35,2085} %write{35,2085}
temp	vector	$tmp450	%read{35,2085} %write{35,2085}
temp	vector	$tmp451	%read{35,2085} %write{35,2085}
temp	float	$tmp452	%read{35,2085} %write{35,2085}
temp	int	$tmp453	%read{35,2085} %write{35,2085}
temp	float	$tmp454	%read{35,2085} %write{35,2085}
temp	vector	$tmp455	%read{35,2085} %write{35,2085}
temp	vector	$tmp456	%read{35,2085} %write{35,2085}
temp	float	$tmp457	%read{35,2085} %write{35,2085}
temp	float	$tmp458	%read{35,2085} %write{35,2085}
temp	float	$tmp459	%read{35,2085} %write{35,2085}
temp	float	$tmp460	%read{35,2085} %write{35,2085}
temp	int	$tmp461	%read{35,2085} %write{35,2085}
temp	float	$tmp462	%read{35,2085} %write{35,2085}
temp	vector	$tmp463	%read{35,2085} %write{35,2085}
temp	vector	$tmp464	%read{35,2085} %write{35,2085}
temp	float	$tmp465	%read{35,2085} %write{35,2085}
temp	int	$tmp466	%read{35,2085} %write{35,2085}
temp	float	$tmp467	%read{35,2085} %write{35,2085}
temp	float	$tmp468	%read{35,2085} %write{35,2085}
temp	vector	$tmp469	%read{35,2085} %write{35,2085}
temp	vector	$tmp470	%read{35,2085} %write{35,2085}
temp	float	$tmp471	%read{35,2085} %write{35,2085}
temp	float	$tmp472	%read{35,2085} %write{35,2085}
temp	float	$tmp473	%read{35,2085} %write{35,2085}
temp	float	$tmp474	%read{35,2085} %write{35,2085}
temp	float	$tmp475	%read{35,2085} %write{35,2085}
temp	float	$tmp476	%read{35,2085} %write{35,2085}
temp	float	$tmp477	%read{35,2085} %write{35,2085}
temp	int	$tmp478	%read{35,2085} %write{35,2085}
temp	int	$tmp479	%read{35,2085} %write{35,2085}
temp	float	$tmp480	%read{35,2085} %write{35,2085}
temp	vector	$tmp481	%read{35,2085} %write{35,2085}
temp	vector	$tmp482	%read{35,2085} %write{35,2085}
temp	float	$tmp483	%read{35,2085} %write{35,2085}
temp	int	$tmp484	%read{35,2085} %write{35,2085}
temp	int	$tmp485	%read{35,2085} %write{35,2085}
temp	float	$tmp486	%read{35,2085} %write{35,2085}
temp	float	$tmp487	%read{35,2085} %write{35,2085}
temp	vector	$tmp488	%read{35,2085} %write{35,2085}
temp	vector	$tmp489	%read{35,2085} %write{35,2085}
temp	float	$tmp490	%read{35,2085} %write{35,2085}
temp	float	$tmp491	%read{35,2085} %write{35,2085}
temp	float	$tmp492	%read{35,2085} %write{35,2085}
temp	float	$tmp493	%read{35,2085} %write{35,2085}
temp	int	$tmp494	%read{35,2085} %write{35,2085}
temp	int	$tmp495	%read{35,2085} %write{35,2085}
temp	float	$tmp496	%read{35,2085} %write{35,2085}
temp	float	$tmp497	%read{35,2085} %write{35,2085}
temp	vector	$tmp498	%read{35,2085} %write{35,2085}
temp	vector	$tmp499	%read{35,2085} %write{35,2085}
temp	float	$tmp500	%read{35,2085} %write{35,2085}
temp	int	$tmp501	%read{35,2085} %write{35,2085}
temp	int	$tmp502	%read{35,2085} %write{35,2085}
temp	float	$tmp503	%read{35,2085} %write{35,2085}
temp	float	$tmp504	%read{35,2085} %write{35,2085}
temp	float	$tmp505	%read{35,2085} %write{35,2085}
temp	vector	$tmp506	%read{35,2085} %write{35,2085}
temp	vector	$tmp507	%read{35,2085} %write{35,2085}
temp	float	$tmp508	%read{35,2085} %write{35,2085}
temp	float	$tmp509	%read{35,2085} %write{35,2085}
temp	float	$tmp510	%read{35,2085} %write{35,2085}
temp	float	$tmp511	%read{35,2085} %write{35,2085}
temp	float	$tmp512	%read{35,2085} %write{35,2085}
temp	float	$tmp513	%read{35,2085} %write{35,2085}
temp	float	$tmp514	%read{35,2085} %write{35,2085}
temp	float	$tmp515	%read{35,2085} %write{35,2085}
temp	float	$tmp516	%read{35,2085} %write{35,2085}
temp	vector	$tmp517	%read{35,2085} %write{35,2085}
temp	vector	$tmp518	%read{35,2085} %write{35,2085}
temp	vector	$tmp527	%read{35,2085} %write{35,2085}
temp	vector	$tmp528	%read{35,2085} %write{35,2085}
temp	float	$tmp529	%read{35,2085} %write{35,2085}
temp	float	$tmp530	%read{35,2085} %write{35,2085}
temp	vector	$tmp531	%read{35,2085} %write{35,2085}
temp	float	$tmp532	%read{35,2085} %write{35,2085}
temp	float	$tmp533	%read{35,2085} %write{35,2085}
temp	vector	$tmp534	%read{35,2085} %write{35,2085}
temp	float	$tmp535	%read{35,2085} %write{35,2085}
temp	float	$tmp536	%read{35,2085} %write{35,2085}
temp	vector	$tmp537	%read{35,2085} %write{35,2085}
temp	float	$tmp538	%read{35,2085} %write{35,2085}
temp	vector	$tmp539	%read{35,2085} %write{35,2085}
temp	float	$tmp540	%read{35,2085} %write{35,2085}
temp	vector	$tmp541	%read{35,2085} %write{35,2085}
temp	float	$tmp542	%read{35,2085} %write{35,2085}
temp	float	$tmp543	%read{35,2085} %write{35,2085}
temp	vector	$tmp544	%read{35,2085} %write{35,2085}
temp	float	$tmp545	%read{35,2085} %write{35,2085}
temp	float	$tmp546	%read{35,2085} %write{35,2085}
temp	vector	$tmp547	%read{35,2085} %write{35,2085}
temp	float	$tmp548	%read{35,2085} %write{35,2085}
temp	vector	$tmp549	%read{35,2085} %write{35,2085}
temp	float	$tmp550	%read{35,2085} %write{35,2085}
temp	float	$tmp551	%read{35,2085} %write{35,2085}
temp	vector	$tmp552	%read{35,2085} %write{35,2085}
temp	float	$tmp553	%read{35,2085} %write{35,2085}
temp	vector	$tmp554	%read{35,2085} %write{35,2085}
temp	vector	$tmp555	%read{35,2085} %write{35,2085}
temp	float	$tmp556	%read{35,2085} %write{35,2085}
temp	float	$tmp557	%read{35,2085} %write{35,2085}
temp	float	$tmp558	%read{35,2085} %write{35,2085}
temp	vector	$tmp559	%read{35,2085} %write{35,2085}
temp	float	$tmp560	%read{35,2085} %write{35,2085}
temp	float	$tmp561	%read{35,2085} %write{35,2085}
temp	vector	$tmp562	%read{35,2085} %write{35,2085}
temp	float	$tmp563	%read{35,2085} %write{35,2085}
temp	vector	$tmp564	%read{35,2085} %write{35,2085}
temp	float	$tmp565	%read{35,2085} %write{35,2085}
temp	float	$tmp566	%read{35,2085} %write{35,2085}
temp	int	$tmp575	%read{35,2085} %write{35,2085}
temp	int	$tmp576	%read{35,2085} %write{35,2085}
temp	int	$tmp577	%read{35,2085} %write{35,2085}
temp	int	$tmp578	%read{35,2085} %write{35,2085}
temp	int	$tmp579	%read{35,2085} %write{35,2085}
temp	int	$tmp580	%read{35,2085} %write{35,2085}
temp	float	$tmp581	%read{35,2085} %write{35,2085}
temp	float	$tmp582	%read{35,2085} %write{35,2085}
temp	float	$tmp583	%read{35,2085} %write{35,2085}
temp	float	$tmp584	%read{35,2085} %write{35,2085}
temp	float	$tmp585	%read{35,2085} %write{35,2085}
temp	float	$tmp586	%read{35,2085} %write{35,2085}
temp	float	$tmp587	%read{35,2085} %write{35,2085}
temp	float	$tmp588	%read{35,2085} %write{35,2085}
temp	float	$tmp589	%read{35,2085} %write{35,2085}
temp	float	$tmp590	%read{35,2085} %write{35,2085}
temp	float	$tmp591	%read{35,2085} %write{35,2085}
temp	float	$tmp592	%read{35,2085} %write{35,2085}
temp	float	$tmp593	%read{35,2085} %write{35,2085}
temp	float	$tmp594	%read{35,2085} %write{35,2085}
temp	float	$tmp595	%read{35,2085} %write{35,2085}
temp	float	$tmp596	%read{35,2085} %write{35,2085}
temp	float	$tmp597	%read{35,2085} %write{35,2085}
temp	float	$tmp598	%read{35,2085} %write{35,2085}
temp	float	$tmp599	%read{35,2085} %write{35,2085}
temp	float	$tmp600	%read{35,2085} %write{35,2085}
temp	float	$tmp601	%read{35,2085} %write{35,2085}
temp	float	$tmp602	%read{35,2085} %write{35,2085}
temp	float	$tmp603	%read{35,2085} %write{35,2085}
temp	float	$tmp604	%read{35,2085} %write{35,2085}
temp	int	$tmp605	%read{35,2085} %write{35,2085}
temp	int	$tmp606	%read{35,2085} %write{35,2085}
temp	int	$tmp607	%read{35,2085} %write{35,2085}
temp	int	$tmp608	%read{35,2085} %write{35,2085}
temp	int	$tmp609	%read{35,2085} %write{35,2085}
temp	int	$tmp610	%read{35,2085} %write{35,2085}
temp	int	$tmp611	%read{35,2085} %write{35,2085}
temp	int	$tmp612	%read{35,2085} %write{35,2085}
temp	int	$tmp613	%read{35,2085} %write{35,2085}
temp	float	$tmp614	%read{35,2085} %write{35,2085}
temp	float	$tmp615	%read{35,2085} %write{35,2085}
temp	float	$tmp616	%read{35,2085} %write{35,2085}
temp	float	$tmp617	%read{35,2085} %write{35,2085}
temp	int	$tmp618	%read{35,2085} %write{35,2085}
temp	vector	$tmp619	%read{35,2085} %write{35,2085}
temp	vector	$tmp620	%read{35,2085} %write{35,2085}
temp	float	$tmp621	%read{35,2085} %write{35,2085}
temp	int	$tmp622	%read{35,2085} %write{35,2085}
temp	float	$tmp623	%read{35,2085} %write{35,2085}
temp	vector	$tmp624	%read{35,2085} %write{35,2085}
temp	vector	$tmp625	%read{35,2085} %write{35,2085}
temp	float	$tmp626	%read{35,2085} %write{35,2085}
temp	float	$tmp627	%read{35,2085} %write{35,2085}
temp	float	$tmp628	%read{35,2085} %write{35,2085}
temp	float	$tmp629	%read{35,2085} %write{35,2085}
temp	int	$tmp630	%read{35,2085} %write{35,2085}
temp	float	$tmp631	%read{35,2085} %write{35,2085}
temp	vector	$tmp632	%read{35,2085} %write{35,2085}
temp	vector	$tmp633	%read{35,2085} %write{35,2085}
temp	float	$tmp634	%read{35,2085} %write{35,2085}
temp	int	$tmp635	%read{35,2085} %write{35,2085}
temp	float	$tmp636	%read{35,2085} %write{35,2085}
temp	float	$tmp637	%read{35,2085} %write{35,2085}
temp	vector	$tmp638	%read{35,2085} %write{35,2085}
temp	vector	$tmp639	%read{35,2085} %write{35,2085}
temp	float	$tmp640	%read{35,2085} %write{35,2085}
temp	float	$tmp641	%read{35,2085} %write{35,2085}
temp	float	$tmp642	%read{35,2085} %write{35,2085}
temp	float	$tmp643	%read{35,2085} %write{35,2085}
temp	float	$tmp644	%read{35,2085} %write{35,2085}
temp	float	$tmp645	%read{35,2085} %write{35,2085}
temp	float	$tmp646	%read{35,2085} %write{35,2085}
temp	int	$tmp647	%read{35,2085} %write{35,2085}
temp	int	$tmp648	%read{35,2085} %write{35,2085}
temp	float	$tmp649	%read{35,2085} %write{35,2085}
temp	vector	$tmp650	%read{35,2085} %write{35,2085}
temp	vector	$tmp651	%read{35,2085} %write{35,2085}
temp	float	$tmp652	%read{35,2085} %write{35,2085}
temp	int	$tmp653	%read{35,2085} %write{35,2085}
temp	int	$tmp654	%read{35,2085} %write{35,2085}
temp	float	$tmp655	%read{35,2085} %write{35,2085}
temp	float	$tmp656	%read{35,2085} %write{35,2085}
temp	vector	$tmp657	%read{35,2085} %write{35,2085}
temp	vector	$tmp658	%read{35,2085} %write{35,2085}
temp	float	$tmp659	%read{35,2085} %write{35,2085}
temp	float	$tmp660	%read{35,2085} %write{35,2085}
temp	float	$tmp661	%read{35,2085} %write{35,2085}
temp	float	$tmp662	%read{35,2085} %write{35,2085}
temp	int	$tmp663	%read{35,2085} %write{35,2085}
temp	int	$tmp664	%read{35,2085} %write{35,2085}
temp	float	$tmp665	%read{35,2085} %write{35,2085}
temp	float	$tmp666	%read{35,2085} %write{35,2085}
temp	vector	$tmp667	%read{35,2085} %write{35,2085}
temp	vector	$tmp668	%read{35,2085} %write{35,2085}
temp	float	$tmp669	%read{35,2085} %write{35,2085}
temp	int	$tmp670	%read{35,2085} %write{35,2085}
temp	int	$tmp671	%read{35,2085} %write{35,2085}
temp	float	$tmp672	%read{35,2085} %write{35,2085}
temp	float	$tmp673	%read{35,2085} %write{35,2085}
temp	float	$tmp674	%read{35,2085} %write{35,2085}
temp	vector	$tmp675	%read{35,2085} %write{35,2085}
temp	vector	$tmp676	%read{35,2085} %write{35,2085}
temp	float	$tmp677	%read{35,2085} %write{35,2085}
temp	float	$tmp678	%read{35,2085} %write{35,2085}
temp	float	$tmp679	%read{35,2085} %write{35,2085}
temp	float	$tmp680	%read{35,2085} %write{35,2085}
temp	float	$tmp681	%read{35,2085} %write{35,2085}
temp	float	$tmp682	%read{35,2085} %write{35,2085}
temp	float	$tmp683	%read{35,2085} %write{35,2085}
temp	float	$tmp684	%read{35,2085} %write{35,2085}
temp	vector	$tmp685	%read{35,2085} %write{35,2085}
temp	vector	$tmp686	%read{35,2085} %write{35,2085}
temp	vector	$tmp695	%read{35,2085} %write{35,2085}
temp	vector	$tmp696	%read{35,2085} %write{35,2085}
temp	float	$tmp697	%read{35,2085} %write{35,2085}
temp	float	$tmp698	%read{35,2085} %write{35,2085}
temp	vector	$tmp699	%read{35,2085} %write{35,2085}
temp	float	$tmp700	%read{35,2085} %write{35,2085}
temp	float	$tmp701	%read{35,2085} %write{35,2085}
temp	vector	$tmp702	%read{35,2085} %write{35,2085}
temp	float	$tmp703	%read{35,2085} %write{35,2085}
temp	float	$tmp704	%read{35,2085} %write{35,2085}
temp	vector	$tmp705	%read{35,2085} %write{35,2085}
temp	float	$tmp706	%read{35,2085} %write{35,2085}
temp	vector	$tmp707	%read{35,2085} %write{35,2085}
temp	float	$tmp708	%read{35,2085} %write{35,2085}
temp	vector	$tmp709	%read{35,2085} %write{35,2085}
temp	float	$tmp710	%read{35,2085} %write{35,2085}
temp	float	$tmp711	%read{35,2085} %write{35,2085}
temp	vector	$tmp712	%read{35,2085} %write{35,2085}
temp	float	$tmp713	%read{35,2085} %write{35,2085}
temp	float	$tmp714	%read{35,2085} %write{35,2085}
temp	vector	$tmp715	%read{35,2085} %write{35,2085}
temp	float	$tmp716	%read{35,2085} %write{35,2085}
temp	vector	$tmp717	%read{35,2085} %write{35,2085}
temp	float	$tmp718	%read{35,2085} %write{35,2085}
temp	float	$tmp719	%read{35,2085} %write{35,2085}
temp	vector	$tmp720	%read{35,2085} %write{35,2085}
temp	float	$tmp721	%read{35,2085} %write{35,2085}
temp	vector	$tmp722	%read{35,2085} %write{35,2085}
temp	vector	$tmp723	%read{35,2085} %write{35,2085}
temp	float	$tmp724	%read{35,2085} %write{35,2085}
temp	float	$tmp725	%read{35,2085} %write{35,2085}
temp	float	$tmp726	%read{35,2085} %write{35,2085}
temp	vector	$tmp727	%read{35,2085} %write{35,2085}
temp	float	$tmp728	%read{35,2085} %write{35,2085}
temp	float	$tmp729	%read{35,2085} %write{35,2085}
temp	vector	$tmp730	%read{35,2085} %write{35,2085}
temp	float	$tmp731	%read{35,2085} %write{35,2085}
temp	vector	$tmp732	%read{35,2085} %write{35,2085}
temp	float	$tmp733	%read{35,2085} %write{35,2085}
temp	float	$tmp734	%read{35,2085} %write{35,2085}
temp	int	$tmp743	%read{35,2085} %write{35,2085}
temp	int	$tmp744	%read{35,2085} %write{35,2085}
temp	int	$tmp745	%read{35,2085} %write{35,2085}
temp	int	$tmp746	%read{35,2085} %write{35,2085}
temp	int	$tmp747	%read{35,2085} %write{35,2085}
temp	int	$tmp748	%read{35,2085} %write{35,2085}
temp	float	$tmp749	%read{35,2085} %write{35,2085}
temp	float	$tmp750	%read{35,2085} %write{35,2085}
temp	float	$tmp751	%read{35,2085} %write{35,2085}
temp	float	$tmp752	%read{35,2085} %write{35,2085}
temp	float	$tmp753	%read{35,2085} %write{35,2085}
temp	float	$tmp754	%read{35,2085} %write{35,2085}
temp	float	$tmp755	%read{35,2085} %write{35,2085}
temp	float	$tmp756	%read{35,2085} %write{35,2085}
temp	float	$tmp757	%read{35,2085} %write{35,2085}
temp	float	$tmp758	%read{35,2085} %write{35,2085}
temp	float	$tmp759	%read{35,2085} %write{35,2085}
temp	float	$tmp760	%read{35,2085} %write{35,2085}
temp	float	$tmp761	%read{35,2085} %write{35,2085}
temp	float	$tmp762	%read{35,2085} %write{35,2085}
temp	float	$tmp763	%read{35,2085} %write{35,2085}
temp	float	$tmp764	%read{35,2085} %write{35,2085}
temp	float	$tmp765	%read{35,2085} %write{35,2085}
temp	float	$tmp766	%read{35,2085} %write{35,2085}
temp	float	$tmp767	%read{35,2085} %write{35,2085}
temp	float	$tmp768	%read{35,2085} %write{35,2085}
temp	float	$tmp769	%read{35,2085} %write{35,2085}
temp	float	$tmp770	%read{35,2085} %write{35,2085}
temp	float	$tmp771	%read{35,2085} %write{35,2085}
temp	float	$tmp772	%read{35,2085} %write{35,2085}
temp	int	$tmp773	%read{35,2085} %write{35,2085}
temp	int	$tmp774	%read{35,2085} %write{35,2085}
temp	int	$tmp775	%read{35,2085} %write{35,2085}
temp	int	$tmp776	%read{35,2085} %write{35,2085}
temp	int	$tmp777	%read{35,2085} %write{35,2085}
temp	int	$tmp778	%read{35,2085} %write{35,2085}
temp	int	$tmp779	%read{35,2085} %write{35,2085}
temp	int	$tmp780	%read{35,2085} %write{35,2085}
temp	int	$tmp781	%read{35,2085} %write{35,2085}
temp	float	$tmp782	%read{35,2085} %write{35,2085}
temp	float	$tmp783	%read{35,2085} %write{35,2085}
temp	float	$tmp784	%read{35,2085} %write{35,2085}
temp	float	$tmp785	%read{35,2085} %write{35,2085}
temp	int	$tmp786	%read{35,2085} %write{35,2085}
temp	vector	$tmp787	%read{35,2085} %write{35,2085}
temp	vector	$tmp788	%read{35,2085} %write{35,2085}
temp	float	$tmp789	%read{35,2085} %write{35,2085}
temp	int	$tmp790	%read{35,2085} %write{35,2085}
temp	float	$tmp791	%read{35,2085} %write{35,2085}
temp	vector	$tmp792	%read{35,2085} %write{35,2085}
temp	vector	$tmp793	%read{35,2085} %write{35,2085}
temp	float	$tmp794	%read{35,2085} %write{35,2085}
temp	float	$tmp795	%read{35,2085} %write{35,2085}
temp	float	$tmp796	%read{35,2085} %write{35,2085}
temp	float	$tmp797	%read{35,2085} %write{35,2085}
temp	int	$tmp798	%read{35,2085} %write{35,2085}
temp	float	$tmp799	%read{35,2085} %write{35,2085}
temp	vector	$tmp800	%read{35,2085} %write{35,2085}
temp	vector	$tmp801	%read{35,2085} %write{35,2085}
temp	float	$tmp802	%read{35,2085} %write{35,2085}
temp	int	$tmp803	%read{35,2085} %write{35,2085}
temp	float	$tmp804	%read{35,2085} %write{35,2085}
temp	float	$tmp805	%read{35,2085} %write{35,2085}
temp	vector	$tmp806	%read{35,2085} %write{35,2085}
temp	vector	$tmp807	%read{35,2085} %write{35,2085}
temp	float	$tmp808	%read{35,2085} %write{35,2085}
temp	float	$tmp809	%read{35,2085} %write{35,2085}
temp	float	$tmp810	%read{35,2085} %write{35,2085}
temp	float	$tmp811	%read{35,2085} %write{35,2085}
temp	float	$tmp812	%read{35,2085} %write{35,2085}
temp	float	$tmp813	%read{35,2085} %write{35,2085}
temp	float	$tmp814	%read{35,2085} %write{35,2085}
temp	int	$tmp815	%read{35,2085} %write{35,2085}
temp	int	$tmp816	%read{35,2085} %write{35,2085}
temp	float	$tmp817	%read{35,2085} %write{35,2085}
temp	vector	$tmp818	%read{35,2085} %write{35,2085}
temp	vector	$tmp819	%read{35,2085} %write{35,2085}
temp	float	$tmp820	%read{35,2085} %write{35,2085}
temp	int	$tmp821	%read{35,2085} %write{35,2085}
temp	int	$tmp822	%read{35,2085} %write{35,2085}
temp	float	$tmp823	%read{35,2085} %write{35,2085}
temp	float	$tmp824	%read{35,2085} %write{35,2085}
temp	vector	$tmp825	%read{35,2085} %write{35,2085}
temp	vector	$tmp826	%read{35,2085} %write{35,2085}
temp	float	$tmp827	%read{35,2085} %write{35,2085}
temp	float	$tmp828	%read{35,2085} %write{35,2085}
temp	float	$tmp829	%read{35,2085} %write{35,2085}
temp	float	$tmp830	%read{35,2085} %write{35,2085}
temp	int	$tmp831	%read{35,2085} %write{35,2085}
temp	int	$tmp832	%read{35,2085} %write{35,2085}
temp	float	$tmp833	%read{35,2085} %write{35,2085}
temp	float	$tmp834	%read{35,2085} %write{35,2085}
temp	vector	$tmp835	%read{35,2085} %write{35,2085}
temp	vector	$tmp836	%read{35,2085} %write{35,2085}
temp	float	$tmp837	%read{35,2085} %write{35,2085}
temp	int	$tmp838	%read{35,2085} %write{35,2085}
temp	int	$tmp839	%read{35,2085} %write{35,2085}
temp	float	$tmp840	%read{35,2085} %write{35,2085}
temp	float	$tmp841	%read{35,2085} %write{35,2085}
temp	float	$tmp842	%read{35,2085} %write{35,2085}
temp	vector	$tmp843	%read{35,2085} %write{35,2085}
temp	vector	$tmp844	%read{35,2085} %write{35,2085}
temp	float	$tmp845	%read{35,2085} %write{35,2085}
temp	float	$tmp846	%read{35,2085} %write{35,2085}
temp	float	$tmp847	%read{35,2085} %write{35,2085}
temp	float	$tmp848	%read{35,2085} %write{35,2085}
temp	float	$tmp849	%read{35,2085} %write{35,2085}
temp	float	$tmp850	%read{35,2085} %write{35,2085}
temp	float	$tmp851	%read{35,2085} %write{35,2085}
temp	float	$tmp852	%read{35,2085} %write{35,2085}
temp	float	$tmp853	%read{35,2085} %write{35,2085}
temp	vector	$tmp854	%read{35,2085} %write{35,2085}
temp	vector	$tmp855	%read{35,2085} %write{35,2085}
temp	vector	$tmp864	%read{35,2085} %write{35,2085}
temp	vector	$tmp865	%read{35,2085} %write{35,2085}
temp	float	$tmp866	%read{35,2085} %write{35,2085}
temp	float	$tmp867	%read{35,2085} %write{35,2085}
temp	vector	$tmp868	%read{35,2085} %write{35,2085}
temp	float	$tmp869	%read{35,2085} %write{35,2085}
temp	float	$tmp870	%read{35,2085} %write{35,2085}
temp	vector	$tmp871	%read{35,2085} %write{35,2085}
temp	float	$tmp872	%read{35,2085} %write{35,2085}
temp	float	$tmp873	%read{35,2085} %write{35,2085}
temp	vector	$tmp874	%read{35,2085} %write{35,2085}
temp	float	$tmp875	%read{35,2085} %write{35,2085}
temp	vector	$tmp876	%read{35,2085} %write{35,2085}
temp	float	$tmp877	%read{35,2085} %write{35,2085}
temp	vector	$tmp878	%read{35,2085} %write{35,2085}
temp	float	$tmp879	%read{35,2085} %write{35,2085}
temp	float	$tmp880	%read{35,2085} %write{35,2085}
temp	vector	$tmp881	%read{35,2085} %write{35,2085}
temp	float	$tmp882	%read{35,2085} %write{35,2085}
temp	float	$tmp883	%read{35,2085} %write{35,2085}
temp	vector	$tmp884	%read{35,2085} %write{35,2085}
temp	float	$tmp885	%read{35,2085} %write{35,2085}
temp	vector	$tmp886	%read{35,2085} %write{35,2085}
temp	float	$tmp887	%read{35,2085} %write{35,2085}
temp	float	$tmp888	%read{35,2085} %write{35,2085}
temp	vector	$tmp889	%read{35,2085} %write{35,2085}
temp	float	$tmp890	%read{35,2085} %write{35,2085}
temp	vector	$tmp891	%read{35,2085} %write{35,2085}
temp	vector	$tmp892	%read{35,2085} %write{35,2085}
temp	float	$tmp893	%read{35,2085} %write{35,2085}
temp	float	$tmp894	%read{35,2085} %write{35,2085}
temp	float	$tmp895	%read{35,2085} %write{35,2085}
temp	vector	$tmp896	%read{35,2085} %write{35,2085}
temp	float	$tmp897	%read{35,2085} %write{35,2085}
temp	float	$tmp898	%read{35,2085} %write{35,2085}
temp	vector	$tmp899	%read{35,2085} %write{35,2085}
temp	float	$tmp900	%read{35,2085} %write{35,2085}
temp	vector	$tmp901	%read{35,2085} %write{35,2085}
temp	float	$tmp902	%read{35,2085} %write{35,2085}
temp	float	$tmp903	%read{35,2085} %write{35,2085}
temp	int	$tmp912	%read{35,2085} %write{35,2085}
temp	int	$tmp913	%read{35,2085} %write{35,2085}
temp	int	$tmp914	%read{35,2085} %write{35,2085}
temp	int	$tmp915	%read{35,2085} %write{35,2085}
temp	int	$tmp916	%read{35,2085} %write{35,2085}
temp	int	$tmp917	%read{35,2085} %write{35,2085}
temp	float	$tmp918	%read{35,2085} %write{35,2085}
temp	float	$tmp919	%read{35,2085} %write{35,2085}
temp	float	$tmp920	%read{35,2085} %write{35,2085}
temp	float	$tmp921	%read{35,2085} %write{35,2085}
temp	float	$tmp922	%read{35,2085} %write{35,2085}
temp	float	$tmp923	%read{35,2085} %write{35,2085}
temp	float	$tmp924	%read{35,2085} %write{35,2085}
temp	float	$tmp925	%read{35,2085} %write{35,2085}
temp	float	$tmp926	%read{35,2085} %write{35,2085}
temp	float	$tmp927	%read{35,2085} %write{35,2085}
temp	float	$tmp928	%read{35,2085} %write{35,2085}
temp	float	$tmp929	%read{35,2085} %write{35,2085}
temp	float	$tmp930	%read{35,2085} %write{35,2085}
temp	float	$tmp931	%read{35,2085} %write{35,2085}
temp	float	$tmp932	%read{35,2085} %write{35,2085}
temp	float	$tmp933	%read{35,2085} %write{35,2085}
temp	float	$tmp934	%read{35,2085} %write{35,2085}
temp	float	$tmp935	%read{35,2085} %write{35,2085}
temp	float	$tmp936	%read{35,2085} %write{35,2085}
temp	float	$tmp937	%read{35,2085} %write{35,2085}
temp	float	$tmp938	%read{35,2085} %write{35,2085}
temp	float	$tmp939	%read{35,2085} %write{35,2085}
temp	float	$tmp940	%read{35,2085} %write{35,2085}
temp	float	$tmp941	%read{35,2085} %write{35,2085}
temp	int	$tmp942	%read{35,2085} %write{35,2085}
temp	int	$tmp943	%read{35,2085} %write{35,2085}
temp	int	$tmp944	%read{35,2085} %write{35,2085}
temp	int	$tmp945	%read{35,2085} %write{35,2085}
temp	int	$tmp946	%read{35,2085} %write{35,2085}
temp	int	$tmp947	%read{35,2085} %write{35,2085}
temp	int	$tmp948	%read{35,2085} %write{35,2085}
temp	int	$tmp949	%read{35,2085} %write{35,2085}
temp	int	$tmp950	%read{35,2085} %write{35,2085}
temp	float	$tmp951	%read{35,2085} %write{35,2085}
temp	float	$tmp952	%read{35,2085} %write{35,2085}
temp	float	$tmp953	%read{35,2085} %write{35,2085}
temp	float	$tmp954	%read{35,2085} %write{35,2085}
temp	int	$tmp955	%read{35,2085} %write{35,2085}
temp	vector	$tmp956	%read{35,2085} %write{35,2085}
temp	vector	$tmp957	%read{35,2085} %write{35,2085}
temp	float	$tmp958	%read{35,2085} %write{35,2085}
temp	int	$tmp959	%read{35,2085} %write{35,2085}
temp	float	$tmp960	%read{35,2085} %write{35,2085}
temp	vector	$tmp961	%read{35,2085} %write{35,2085}
temp	vector	$tmp962	%read{35,2085} %write{35,2085}
temp	float	$tmp963	%read{35,2085} %write{35,2085}
temp	float	$tmp964	%read{35,2085} %write{35,2085}
temp	float	$tmp965	%read{35,2085} %write{35,2085}
temp	float	$tmp966	%read{35,2085} %write{35,2085}
temp	int	$tmp967	%read{35,2085} %write{35,2085}
temp	float	$tmp968	%read{35,2085} %write{35,2085}
temp	vector	$tmp969	%read{35,2085} %write{35,2085}
temp	vector	$tmp970	%read{35,2085} %write{35,2085}
temp	float	$tmp971	%read{35,2085} %write{35,2085}
temp	int	$tmp972	%read{35,2085} %write{35,2085}
temp	float	$tmp973	%read{35,2085} %write{35,2085}
temp	float	$tmp974	%read{35,2085} %write{35,2085}
temp	vector	$tmp975	%read{35,2085} %write{35,2085}
temp	vector	$tmp976	%read{35,2085} %write{35,2085}
temp	float	$tmp977	%read{35,2085} %write{35,2085}
temp	float	$tmp978	%read{35,2085} %write{35,2085}
temp	float	$tmp979	%read{35,2085} %write{35,2085}
temp	float	$tmp980	%read{35,2085} %write{35,2085}
temp	float	$tmp981	%read{35,2085} %write{35,2085}
temp	float	$tmp982	%read{35,2085} %write{35,2085}
temp	float	$tmp983	%read{35,2085} %write{35,2085}
temp	int	$tmp984	%read{35,2085} %write{35,2085}
temp	int	$tmp985	%read{35,2085} %write{35,2085}
temp	float	$tmp986	%read{35,2085} %write{35,2085}
temp	vector	$tmp987	%read{35,2085} %write{35,2085}
temp	vector	$tmp988	%read{35,2085} %write{35,2085}
temp	float	$tmp989	%read{35,2085} %write{35,2085}
temp	int	$tmp990	%read{35,2085} %write{35,2085}
temp	int	$tmp991	%read{35,2085} %write{35,2085}
temp	float	$tmp992	%read{35,2085} %write{35,2085}
temp	float	$tmp993	%read{35,2085} %write{35,2085}
temp	vector	$tmp994	%read{35,2085} %write{35,2085}
temp	vector	$tmp995	%read{35,2085} %write{35,2085}
temp	float	$tmp996	%read{35,2085} %write{35,2085}
temp	float	$tmp997	%read{35,2085} %write{35,2085}
temp	float	$tmp998	%read{35,2085} %write{35,2085}
temp	float	$tmp999	%read{35,2085} %write{35,2085}
temp	int	$tmp1000	%read{35,2085} %write{35,2085}
temp	int	$tmp1001	%read{35,2085} %write{35,2085}
temp	float	$tmp1002	%read{35,2085} %write{35,2085}
temp	float	$tmp1003	%read{35,2085} %write{35,2085}
temp	vector	$tmp1004	%read{35,2085} %write{35,2085}
temp	vector	$tmp1005	%read{35,2085} %write{35,2085}
temp	float	$tmp1006	%read{35,2085} %write{35,2085}
temp	int	$tmp1007	%read{35,2085} %write{35,2085}
temp	int	$tmp1008	%read{35,2085} %write{35,2085}
temp	float	$tmp1009	%read{35,2085} %write{35,2085}
temp	float	$tmp1010	%read{35,2085} %write{35,2085}
temp	float	$tmp1011	%read{35,2085} %write{35,2085}
temp	vector	$tmp1012	%read{35,2085} %write{35,2085}
temp	vector	$tmp1013	%read{35,2085} %write{35,2085}
temp	float	$tmp1014	%read{35,2085} %write{35,2085}
temp	float	$tmp1015	%read{35,2085} %write{35,2085}
temp	float	$tmp1016	%read{35,2085} %write{35,2085}
temp	float	$tmp1017	%read{35,2085} %write{35,2085}
temp	float	$tmp1018	%read{35,2085} %write{35,2085}
temp	float	$tmp1019	%read{35,2085} %write{35,2085}
temp	float	$tmp1020	%read{35,2085} %write{35,2085}
temp	float	$tmp1021	%read{35,2085} %write{35,2085}
temp	vector	$tmp1022	%read{35,2085} %write{35,2085}
temp	vector	$tmp1023	%read{35,2085} %write{35,2085}
temp	vector	$tmp1032	%read{35,2085} %write{35,2085}
temp	vector	$tmp1033	%read{35,2085} %write{35,2085}
temp	float	$tmp1034	%read{35,2085} %write{35,2085}
temp	float	$tmp1035	%read{35,2085} %write{35,2085}
temp	vector	$tmp1036	%read{35,2085} %write{35,2085}
temp	float	$tmp1037	%read{35,2085} %write{35,2085}
temp	float	$tmp1038	%read{35,2085} %write{35,2085}
temp	vector	$tmp1039	%read{35,2085} %write{35,2085}
temp	float	$tmp1040	%read{35,2085} %write{35,2085}
temp	float	$tmp1041	%read{35,2085} %write{35,2085}
temp	vector	$tmp1042	%read{35,2085} %write{35,2085}
temp	float	$tmp1043	%read{35,2085} %write{35,2085}
temp	vector	$tmp1044	%read{35,2085} %write{35,2085}
temp	float	$tmp1045	%read{35,2085} %write{35,2085}
temp	vector	$tmp1046	%read{35,2085} %write{35,2085}
temp	float	$tmp1047	%read{35,2085} %write{35,2085}
temp	float	$tmp1048	%read{35,2085} %write{35,2085}
temp	vector	$tmp1049	%read{35,2085} %write{35,2085}
temp	float	$tmp1050	%read{35,2085} %write{35,2085}
temp	float	$tmp1051	%read{35,2085} %write{35,2085}
temp	vector	$tmp1052	%read{35,2085} %write{35,2085}
temp	float	$tmp1053	%read{35,2085} %write{35,2085}
temp	vector	$tmp1054	%read{35,2085} %write{35,2085}
temp	float	$tmp1055	%read{35,2085} %write{35,2085}
temp	float	$tmp1056	%read{35,2085} %write{35,2085}
temp	vector	$tmp1057	%read{35,2085} %write{35,2085}
temp	float	$tmp1058	%read{35,2085} %write{35,2085}
temp	vector	$tmp1059	%read{35,2085} %write{35,2085}
temp	vector	$tmp1060	%read{35,2085} %write{35,2085}
temp	float	$tmp1061	%read{35,2085} %write{35,2085}
temp	float	$tmp1062	%read{35,2085} %write{35,2085}
temp	float	$tmp1063	%read{35,2085} %write{35,2085}
temp	vector	$tmp1064	%read{35,2085} %write{35,2085}
temp	float	$tmp1065	%read{35,2085} %write{35,2085}
temp	float	$tmp1066	%read{35,2085} %write{35,2085}
temp	vector	$tmp1067	%read{35,2085} %write{35,2085}
temp	float	$tmp1068	%read{35,2085} %write{35,2085}
temp	vector	$tmp1069	%read{35,2085} %write{35,2085}
temp	float	$tmp1070	%read{35,2085} %write{35,2085}
temp	float	$tmp1071	%read{35,2085} %write{35,2085}
temp	int	$tmp1080	%read{35,2085} %write{35,2085}
temp	int	$tmp1081	%read{35,2085} %write{35,2085}
temp	int	$tmp1082	%read{35,2085} %write{35,2085}
temp	int	$tmp1083	%read{35,2085} %write{35,2085}
temp	int	$tmp1084	%read{35,2085} %write{35,2085}
temp	int	$tmp1085	%read{35,2085} %write{35,2085}
temp	float	$tmp1086	%read{35,2085} %write{35,2085}
temp	float	$tmp1087	%read{35,2085} %write{35,2085}
temp	float	$tmp1088	%read{35,2085} %write{35,2085}
temp	float	$tmp1089	%read{35,2085} %write{35,2085}
temp	float	$tmp1090	%read{35,2085} %write{35,2085}
temp	float	$tmp1091	%read{35,2085} %write{35,2085}
temp	float	$tmp1092	%read{35,2085} %write{35,2085}
temp	float	$tmp1093	%read{35,2085} %write{35,2085}
temp	float	$tmp1094	%read{35,2085} %write{35,2085}
temp	float	$tmp1095	%read{35,2085} %write{35,2085}
temp	float	$tmp1096	%read{35,2085} %write{35,2085}
temp	float	$tmp1097	%read{35,2085} %write{35,2085}
temp	float	$tmp1098	%read{35,2085} %write{35,2085}
temp	float	$tmp1099	%read{35,2085} %write{35,2085}
temp	float	$tmp1100	%read{35,2085} %write{35,2085}
temp	float	$tmp1101	%read{35,2085} %write{35,2085}
temp	float	$tmp1102	%read{35,2085} %write{35,2085}
temp	float	$tmp1103	%read{35,2085} %write{35,2085}
temp	float	$tmp1104	%read{35,2085} %write{35,2085}
temp	float	$tmp1105	%read{35,2085} %write{35,2085}
temp	float	$tmp1106	%read{35,2085} %write{35,2085}
temp	float	$tmp1107	%read{35,2085} %write{35,2085}
temp	float	$tmp1108	%read{35,2085} %write{35,2085}
temp	float	$tmp1109	%read{35,2085} %write{35,2085}
temp	int	$tmp1110	%read{35,2085} %write{35,2085}
temp	int	$tmp1111	%read{35,2085} %write{35,2085}
temp	int	$tmp1112	%read{35,2085} %write{35,2085}
temp	int	$tmp1113	%read{35,2085} %write{35,2085}
temp	int	$tmp1114	%read{35,2085} %write{35,2085}
temp	int	$tmp1115	%read{35,2085} %write{35,2085}
temp	int	$tmp1116	%read{35,2085} %write{35,2085}
temp	int	$tmp1117	%read{35,2085} %write{35,2085}
temp	int	$tmp1118	%read{35,2085} %write{35,2085}
temp	float	$tmp1119	%read{35,2085} %write{35,2085}
temp	float	$tmp1120	%read{35,2085} %write{35,2085}
temp	float	$tmp1121	%read{35,2085} %write{35,2085}
temp	float	$tmp1122	%read{35,2085} %write{35,2085}
temp	int	$tmp1123	%read{35,2085} %write{35,2085}
temp	vector	$tmp1124	%read{35,2085} %write{35,2085}
temp	vector	$tmp1125	%read{35,2085} %write{35,2085}
temp	float	$tmp1126	%read{35,2085} %write{35,2085}
temp	int	$tmp1127	%read{35,2085} %write{35,2085}
temp	float	$tmp1128	%read{35,2085} %write{35,2085}
temp	vector	$tmp1129	%read{35,2085} %write{35,2085}
temp	vector	$tmp1130	%read{35,2085} %write{35,2085}
temp	float	$tmp1131	%read{35,2085} %write{35,2085}
temp	float	$tmp1132	%read{35,2085} %write{35,2085}
temp	float	$tmp1133	%read{35,2085} %write{35,2085}
temp	float	$tmp1134	%read{35,2085} %write{35,2085}
temp	int	$tmp1135	%read{35,2085} %write{35,2085}
temp	float	$tmp1136	%read{35,2085} %write{35,2085}
temp	vector	$tmp1137	%read{35,2085} %write{35,2085}
temp	vector	$tmp1138	%read{35,2085} %write{35,2085}
temp	float	$tmp1139	%read{35,2085} %write{35,2085}
temp	int	$tmp1140	%read{35,2085} %write{35,2085}
temp	float	$tmp1141	%read{35,2085} %write{35,2085}
temp	float	$tmp1142	%read{35,2085} %write{35,2085}
temp	vector	$tmp1143	%read{35,2085} %write{35,2085}
temp	vector	$tmp1144	%read{35,2085} %write{35,2085}
temp	float	$tmp1145	%read{35,2085} %write{35,2085}
temp	float	$tmp1146	%read{35,2085} %write{35,2085}
temp	float	$tmp1147	%read{35,2085} %write{35,2085}
temp	float	$tmp1148	%read{35,2085} %write{35,2085}
temp	float	$tmp1149	%read{35,2085} %write{35,2085}
temp	float	$tmp1150	%read{35,2085} %write{35,2085}
temp	float	$tmp1151	%read{35,2085} %write{35,2085}
temp	int	$tmp1152	%read{35,2085} %write{35,2085}
temp	int	$tmp1153	%read{35,2085} %write{35,2085}
temp	float	$tmp1154	%read{35,2085} %write{35,2085}
temp	vector	$tmp1155	%read{35,2085} %write{35,2085}
temp	vector	$tmp1156	%read{35,2085} %write{35,2085}
temp	float	$tmp1157	%read{35,2085} %write{35,2085}
temp	int	$tmp1158	%read{35,2085} %write{35,2085}
temp	int	$tmp1159	%read{35,2085} %write{35,2085}
temp	float	$tmp1160	%read{35,2085} %write{35,2085}
temp	float	$tmp1161	%read{35,2085} %write{35,2085}
temp	vector	$tmp1162	%read{35,2085} %write{35,2085}
temp	vector	$tmp1163	%read{35,2085} %write{35,2085}
temp	float	$tmp1164	%read{35,2085} %write{35,2085}
temp	float	$tmp1165	%read{35,2085} %write{35,2085}
temp	float	$tmp1166	%read{35,2085} %write{35,2085}
temp	float	$tmp1167	%read{35,2085} %write{35,2085}
temp	int	$tmp1168	%read{35,2085} %write{35,2085}
temp	int	$tmp1169	%read{35,2085} %write{35,2085}
temp	float	$tmp1170	%read{35,2085} %write{35,2085}
temp	float	$tmp1171	%read{35,2085} %write{35,2085}
temp	vector	$tmp1172	%read{35,2085} %write{35,2085}
temp	vector	$tmp1173	%read{35,2085} %write{35,2085}
temp	float	$tmp1174	%read{35,2085} %write{35,2085}
temp	int	$tmp1175	%read{35,2085} %write{35,2085}
temp	int	$tmp1176	%read{35,2085} %write{35,2085}
temp	float	$tmp1177	%read{35,2085} %write{35,2085}
temp	float	$tmp1178	%read{35,2085} %write{35,2085}
temp	float	$tmp1179	%read{35,2085} %write{35,2085}
temp	vector	$tmp1180	%read{35,2085} %write{35,2085}
temp	vector	$tmp1181	%read{35,2085} %write{35,2085}
temp	float	$tmp1182	%read{35,2085} %write{35,2085}
temp	float	$tmp1183	%read{35,2085} %write{35,2085}
temp	float	$tmp1184	%read{35,2085} %write{35,2085}
temp	float	$tmp1185	%read{35,2085} %write{35,2085}
temp	float	$tmp1186	%read{35,2085} %write{35,2085}
temp	float	$tmp1187	%read{35,2085} %write{35,2085}
temp	float	$tmp1188	%read{35,2085} %write{35,2085}
temp	float	$tmp1189	%read{35,2085} %write{35,2085}
const	float	$const56	2		%read{2076,2076} %write{2147483647,-1}
temp	float	$tmp1190	%read{35,2085} %write{35,2085}
temp	vector	$tmp1191	%read{35,2085} %write{35,2085}
temp	float	$tmp1192	%read{2088,2088} %write{2087,2087}
code ___main___
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:212
#     if (!isconnected(manifold))
	isconnected	$tmp1 manifold 	%filename{"/WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl"} %line{212} %argrw{"wr"}
	eq		$tmp2 $tmp1 $const1 	%argrw{"wrr"}
	if		$tmp2 21 25 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:214
#         Manifold_Construct(P,N,inputManifoldRw);
	functioncall	$const2 7 	%line{214} %argrw{"r"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:69
#     m.Q = inP;
	assign		inputManifoldRw.Q P 	%filename{"/WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h"} %line{69} %argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:70
#     m.QN = inN;
	assign		inputManifoldRw.QN N 	%line{70} %argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:71
#     m.Qradius = 0.0;
	assign		inputManifoldRw.Qradius $const3 	%line{71} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:215
#         Manifold_Transform(inputManifoldRw,"object");
	functioncall	$const5 21 	%filename{"/WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl"} %line{215} %argrw{"r"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:91
#     Manifold_Transform(ioManifold, "common", toSpace);
	functioncall	$const5 21 	%filename{"/WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h"} %line{91} %argrw{"r"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:78
#     ioManifold.Q = transform(fromSpace, toSpace, ioManifold.Q);
	transform	inputManifoldRw.Q $const6 $const4 inputManifoldRw.Q 	%line{78} %argrw{"wrrr"}
	assign		inputManifoldRw.Q inputManifoldRw.Q 	%argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:79
#     ioManifold.QN = normalize(transform(fromSpace, toSpace, ioManifold.QN));
	transformn	$tmp3 $const6 $const4 inputManifoldRw.QN 	%line{79} %argrw{"wrrr"}
	normalize	inputManifoldRw.QN $tmp3 	%argrw{"wr"}
	assign		inputManifoldRw.QN inputManifoldRw.QN 	%argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:81
#     vector vec1 = vector(1.0);
	assign		___392_vec1 $const7 	%line{81} %argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:82
#     vec1 = transform(fromSpace, toSpace, vec1);
	transformv	___392_vec1 $const6 $const4 ___392_vec1 	%line{82} %argrw{"wrrr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:83
#     float scale = length(vec1) / sqrt(3.0);
	length		$tmp4 ___392_vec1 	%line{83} %argrw{"wr"}
	sqrt		$tmp5 $const8 	%argrw{"wr"}
	div		___392_scale $tmp4 $tmp5 	%argrw{"wrr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:84
#     ioManifold.Qradius *= scale;
	mul		inputManifoldRw.Qradius inputManifoldRw.Qradius ___392_scale 	%line{84} %argrw{"wrr"}
	assign		inputManifoldRw.Qradius inputManifoldRw.Qradius 	%argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:218
#         Manifold_Copy(manifold,inputManifoldRw);
	functioncall	$const9 25 	%filename{"/WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl"} %line{218} %argrw{"r"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:53
#     dest.Q = src.Q;
	assign		inputManifoldRw.Q manifold.Q 	%filename{"/WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h"} %line{53} %argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:54
#     dest.QN = src.QN;
	assign		inputManifoldRw.QN manifold.QN 	%line{54} %argrw{"wr"}
# /WORK_DATA/develop/sources/renderman/PixarRenderMan-Examples-25.2_2282810-linuxRHEL7_gcc93icc219.x86_64/plugins/include/osl/Manifold.h:55
#     dest.Qradius = src.Qradius;
	assign		inputManifoldRw.Qradius manifold.Qradius 	%line{55} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:220
#     point objectPosition = inputManifoldRw.Q;
	assign		objectPosition inputManifoldRw.Q 	%filename{"/WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl"} %line{220} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:221
#     point startPosition = start_frequency * objectPosition - start_offset;
	mul		$tmp6 start_frequency objectPosition 	%line{221} %argrw{"wrr"}
	sub		startPosition $tmp6 start_offset 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:223
#     float noiseValue = fractalPerlinFlowNoise3D(startPosition, flow, lacunarity, flow_rate, gain, advect, octaves);
	functioncall	$const10 2087 	%line{223} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:157
#     float noiseValue = 0.0;
	assign		___424_noiseValue $const3 	%line{157} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:159
#     float flowValue = flow;
	assign		___424_flowValue flow 	%line{159} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:161
#     float amplitude = 1.0;
	assign		___424_amplitude $const11 	%line{161} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:162
#     float advectionAmount = advect;
	assign		___424_advectionAmount advect 	%line{162} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:164
#     for (int octave = 0; octave < octaveCount; ++octave) {
	for		$tmp8 35 37 2085 2086 	%line{164} %argrw{"r"}
	assign		___425_octave $const1 	%argrw{"wr"}
	lt		$tmp7 ___425_octave octaves 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:165
#         float noiseOctave = amplitude * (perlinFlowNoise3D(position, flowValue) - 0.5);
	functioncall	$const12 325 	%line{165} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp18 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp18 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp20 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp21 ___420_a 	%argrw{"wr"}
	vector		$tmp19 $tmp20 ___420_a $tmp21 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp19 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp23 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp24 ___420_a 	%argrw{"wr"}
	vector		$tmp22 $tmp23 $tmp24 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp22 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp26 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp27 ___420_a 	%argrw{"wr"}
	vector		$tmp25 ___420_a $tmp26 $tmp27 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp25 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp29 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp28 $tmp29 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp28 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp31 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp30 ___420_a $tmp31 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp30 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp33 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp34 ___420_a 	%argrw{"wr"}
	vector		$tmp32 ___420_a $tmp33 $tmp34 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp32 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp36 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp37 ___420_a 	%argrw{"wr"}
	vector		$tmp35 $tmp36 ___420_a $tmp37 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp35 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp39 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp38 $tmp39 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp38 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp41 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp42 ___420_a 	%argrw{"wr"}
	vector		$tmp40 $tmp41 $tmp42 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp40 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp44 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp43 ___420_a $tmp44 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp43 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp45 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp45 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp47 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp48 ___420_a 	%argrw{"wr"}
	neg		$tmp49 ___420_a 	%argrw{"wr"}
	vector		$tmp46 $tmp47 $tmp48 $tmp49 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp46 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp51 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp52 ___420_a 	%argrw{"wr"}
	vector		$tmp50 ___420_a $tmp51 $tmp52 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp50 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp54 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp53 ___420_a ___420_a $tmp54 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp53 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp56 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp57 ___420_a 	%argrw{"wr"}
	vector		$tmp55 $tmp56 ___420_a $tmp57 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp55 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x startPosition $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y startPosition $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z startPosition $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 122 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp66 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp66 120 121 	%argrw{"r"}
	assign		$tmp67 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp67 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 129 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp68 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp68 127 128 	%argrw{"r"}
	assign		$tmp69 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp69 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 136 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp70 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp70 134 135 	%argrw{"r"}
	assign		$tmp71 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp71 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp73 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp72 $tmp73 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp72 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp75 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp74 $tmp75 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp74 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp77 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp76 $tmp77 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp76 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 156 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp78 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp79 $tmp78 ___420_fx 	%argrw{"wrr"}
	mul		$tmp80 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp81 $tmp80 $const46 	%argrw{"wrr"}
	mul		$tmp82 ___420_fx $tmp81 	%argrw{"wrr"}
	add		$tmp83 $tmp82 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp79 $tmp83 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 164 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp84 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp85 $tmp84 ___420_fy 	%argrw{"wrr"}
	mul		$tmp86 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp87 $tmp86 $const46 	%argrw{"wrr"}
	mul		$tmp88 ___420_fy $tmp87 	%argrw{"wrr"}
	add		$tmp89 $tmp88 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp85 $tmp89 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 172 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp90 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp91 $tmp90 ___420_fz 	%argrw{"wrr"}
	mul		$tmp92 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp93 $tmp92 $const46 	%argrw{"wrr"}
	mul		$tmp94 ___420_fz $tmp93 	%argrw{"wrr"}
	add		$tmp95 $tmp94 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp91 $tmp95 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp96 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp96 ___420_iy 	%argrw{"wrr"}
	aref		$tmp97 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp97 ___420_iz 	%argrw{"wrr"}
	add		$tmp98 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp99 ___420_perm $tmp98 	%argrw{"wrr"}
	add		___420_AB $tmp99 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp100 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp101 ___420_perm $tmp100 	%argrw{"wrr"}
	add		___420_B $tmp101 ___420_iy 	%argrw{"wrr"}
	aref		$tmp102 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp102 ___420_iz 	%argrw{"wrr"}
	add		$tmp103 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp104 ___420_perm $tmp103 	%argrw{"wrr"}
	add		___420_BB $tmp104 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp105 $const48 ___424_flowValue 	%line{115} %argrw{"wrr"}
	sincos		$tmp105 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp109 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 202 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 200 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp109 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp110 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp111 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp110 $tmp111 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp108 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp113 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp114 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 214 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 212 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp113 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp115 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp116 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp115 $tmp116 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp114 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp112 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 218 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp117 $tmp112 $tmp108 	%line{14} %argrw{"wrr"}
	mul		$tmp118 ___420_i $tmp117 	%argrw{"wrr"}
	add		$tmp107 $tmp108 $tmp118 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp121 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp122 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 230 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 228 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp121 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp123 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp124 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp123 $tmp124 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp122 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp120 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp126 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp127 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp128 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 243 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 241 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp126 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp129 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp130 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp129 $tmp130 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp127 $tmp128 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp125 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 247 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp131 $tmp125 $tmp120 	%line{14} %argrw{"wrr"}
	mul		$tmp132 ___420_i $tmp131 	%argrw{"wrr"}
	add		$tmp119 $tmp120 $tmp132 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 251 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp133 $tmp119 $tmp107 	%line{14} %argrw{"wrr"}
	mul		$tmp134 ___420_j $tmp133 	%argrw{"wrr"}
	add		$tmp106 $tmp107 $tmp134 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp138 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp139 ___420_perm $tmp138 	%argrw{"wrr"}
	sub		$tmp140 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 264 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 262 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp139 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp141 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp142 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp141 $tmp142 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp140 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp137 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp144 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp145 ___420_perm $tmp144 	%argrw{"wrr"}
	sub		$tmp146 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp147 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 278 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 276 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp145 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp148 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp149 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp148 $tmp149 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp146 ___420_fy $tmp147 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp143 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 282 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp150 $tmp143 $tmp137 	%line{14} %argrw{"wrr"}
	mul		$tmp151 ___420_i $tmp150 	%argrw{"wrr"}
	add		$tmp136 $tmp137 $tmp151 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp154 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp155 ___420_perm $tmp154 	%argrw{"wrr"}
	sub		$tmp156 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp157 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 296 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 294 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp155 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp158 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp159 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp158 $tmp159 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp156 $tmp157 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp153 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp161 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp162 ___420_perm $tmp161 	%argrw{"wrr"}
	sub		$tmp163 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp164 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp165 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 311 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 309 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp162 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp166 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp167 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp166 $tmp167 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp163 $tmp164 $tmp165 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp160 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 315 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp168 $tmp160 $tmp153 	%line{14} %argrw{"wrr"}
	mul		$tmp169 ___420_i $tmp168 	%argrw{"wrr"}
	add		$tmp152 $tmp153 $tmp169 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 319 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp170 $tmp152 $tmp136 	%line{14} %argrw{"wrr"}
	mul		$tmp171 ___420_j $tmp170 	%argrw{"wrr"}
	add		$tmp135 $tmp136 $tmp171 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 323 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp172 $tmp135 $tmp106 	%line{14} %argrw{"wrr"}
	mul		$tmp173 ___420_k $tmp172 	%argrw{"wrr"}
	add		___420_noiseValue $tmp106 $tmp173 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp174 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp9 $tmp174 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:165
#         float noiseOctave = amplitude * (perlinFlowNoise3D(position, flowValue) - 0.5);
	sub		$tmp175 $tmp9 $const53 	%line{165} %argrw{"wrr"}
	mul		___426_noiseOctave ___424_amplitude $tmp175 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:166
#         noiseValue += noiseOctave;
	add		___424_noiseValue ___424_noiseValue ___426_noiseOctave 	%line{166} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:168
#         if (advectionAmount != 0.0) {
	neq		$tmp176 ___424_advectionAmount $const3 	%line{168} %argrw{"wrr"}
	if		$tmp176 2081 2081 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:169
#             position -= advectionAmount * noiseOctave * perlinFlowNoise3DGradient(position, flow, 0.01);
	mul		$tmp177 ___424_advectionAmount ___426_noiseOctave 	%line{169} %argrw{"wrr"}
	functioncall	$const55 2079 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:133
#         perlinFlowNoise3D(position + vector(delta, 0.0, 0.0), flow) -
	vector		$tmp180 $const54 $const3 $const3 	%line{133} %argrw{"wrrr"}
	add		$tmp181 startPosition $tmp180 	%argrw{"wrr"}
	functioncall	$const12 622 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp190 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp190 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp192 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp193 ___420_a 	%argrw{"wr"}
	vector		$tmp191 $tmp192 ___420_a $tmp193 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp191 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp195 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp196 ___420_a 	%argrw{"wr"}
	vector		$tmp194 $tmp195 $tmp196 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp194 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp198 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp199 ___420_a 	%argrw{"wr"}
	vector		$tmp197 ___420_a $tmp198 $tmp199 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp197 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp201 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp200 $tmp201 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp200 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp203 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp202 ___420_a $tmp203 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp202 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp205 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp206 ___420_a 	%argrw{"wr"}
	vector		$tmp204 ___420_a $tmp205 $tmp206 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp204 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp208 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp209 ___420_a 	%argrw{"wr"}
	vector		$tmp207 $tmp208 ___420_a $tmp209 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp207 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp211 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp210 $tmp211 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp210 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp213 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp214 ___420_a 	%argrw{"wr"}
	vector		$tmp212 $tmp213 $tmp214 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp212 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp216 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp215 ___420_a $tmp216 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp215 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp217 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp217 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp219 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp220 ___420_a 	%argrw{"wr"}
	neg		$tmp221 ___420_a 	%argrw{"wr"}
	vector		$tmp218 $tmp219 $tmp220 $tmp221 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp218 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp223 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp224 ___420_a 	%argrw{"wr"}
	vector		$tmp222 ___420_a $tmp223 $tmp224 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp222 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp226 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp225 ___420_a ___420_a $tmp226 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp225 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp228 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp229 ___420_a 	%argrw{"wr"}
	vector		$tmp227 $tmp228 ___420_a $tmp229 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp227 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x $tmp181 $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y $tmp181 $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z $tmp181 $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 419 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp238 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp238 417 418 	%argrw{"r"}
	assign		$tmp239 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp239 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 426 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp240 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp240 424 425 	%argrw{"r"}
	assign		$tmp241 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp241 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 433 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp242 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp242 431 432 	%argrw{"r"}
	assign		$tmp243 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp243 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp245 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp244 $tmp245 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp244 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp247 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp246 $tmp247 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp246 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp249 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp248 $tmp249 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp248 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 453 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp250 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp251 $tmp250 ___420_fx 	%argrw{"wrr"}
	mul		$tmp252 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp253 $tmp252 $const46 	%argrw{"wrr"}
	mul		$tmp254 ___420_fx $tmp253 	%argrw{"wrr"}
	add		$tmp255 $tmp254 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp251 $tmp255 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 461 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp256 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp257 $tmp256 ___420_fy 	%argrw{"wrr"}
	mul		$tmp258 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp259 $tmp258 $const46 	%argrw{"wrr"}
	mul		$tmp260 ___420_fy $tmp259 	%argrw{"wrr"}
	add		$tmp261 $tmp260 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp257 $tmp261 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 469 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp262 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp263 $tmp262 ___420_fz 	%argrw{"wrr"}
	mul		$tmp264 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp265 $tmp264 $const46 	%argrw{"wrr"}
	mul		$tmp266 ___420_fz $tmp265 	%argrw{"wrr"}
	add		$tmp267 $tmp266 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp263 $tmp267 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp268 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp268 ___420_iy 	%argrw{"wrr"}
	aref		$tmp269 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp269 ___420_iz 	%argrw{"wrr"}
	add		$tmp270 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp271 ___420_perm $tmp270 	%argrw{"wrr"}
	add		___420_AB $tmp271 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp272 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp273 ___420_perm $tmp272 	%argrw{"wrr"}
	add		___420_B $tmp273 ___420_iy 	%argrw{"wrr"}
	aref		$tmp274 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp274 ___420_iz 	%argrw{"wrr"}
	add		$tmp275 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp276 ___420_perm $tmp275 	%argrw{"wrr"}
	add		___420_BB $tmp276 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp277 $const48 flow 	%line{115} %argrw{"wrr"}
	sincos		$tmp277 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp281 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 499 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 497 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp281 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp282 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp283 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp282 $tmp283 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp280 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp285 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp286 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 511 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 509 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp285 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp287 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp288 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp287 $tmp288 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp286 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp284 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 515 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp289 $tmp284 $tmp280 	%line{14} %argrw{"wrr"}
	mul		$tmp290 ___420_i $tmp289 	%argrw{"wrr"}
	add		$tmp279 $tmp280 $tmp290 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp293 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp294 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 527 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 525 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp293 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp295 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp296 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp295 $tmp296 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp294 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp292 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp298 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp299 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp300 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 540 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 538 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp298 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp301 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp302 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp301 $tmp302 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp299 $tmp300 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp297 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 544 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp303 $tmp297 $tmp292 	%line{14} %argrw{"wrr"}
	mul		$tmp304 ___420_i $tmp303 	%argrw{"wrr"}
	add		$tmp291 $tmp292 $tmp304 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 548 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp305 $tmp291 $tmp279 	%line{14} %argrw{"wrr"}
	mul		$tmp306 ___420_j $tmp305 	%argrw{"wrr"}
	add		$tmp278 $tmp279 $tmp306 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp310 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp311 ___420_perm $tmp310 	%argrw{"wrr"}
	sub		$tmp312 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 561 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 559 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp311 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp313 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp314 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp313 $tmp314 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp312 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp309 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp316 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp317 ___420_perm $tmp316 	%argrw{"wrr"}
	sub		$tmp318 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp319 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 575 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 573 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp317 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp320 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp321 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp320 $tmp321 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp318 ___420_fy $tmp319 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp315 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 579 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp322 $tmp315 $tmp309 	%line{14} %argrw{"wrr"}
	mul		$tmp323 ___420_i $tmp322 	%argrw{"wrr"}
	add		$tmp308 $tmp309 $tmp323 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp326 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp327 ___420_perm $tmp326 	%argrw{"wrr"}
	sub		$tmp328 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp329 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 593 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 591 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp327 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp330 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp331 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp330 $tmp331 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp328 $tmp329 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp325 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp333 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp334 ___420_perm $tmp333 	%argrw{"wrr"}
	sub		$tmp335 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp336 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp337 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 608 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 606 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp334 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp338 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp339 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp338 $tmp339 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp335 $tmp336 $tmp337 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp332 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 612 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp340 $tmp332 $tmp325 	%line{14} %argrw{"wrr"}
	mul		$tmp341 ___420_i $tmp340 	%argrw{"wrr"}
	add		$tmp324 $tmp325 $tmp341 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 616 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp342 $tmp324 $tmp308 	%line{14} %argrw{"wrr"}
	mul		$tmp343 ___420_j $tmp342 	%argrw{"wrr"}
	add		$tmp307 $tmp308 $tmp343 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 620 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp344 $tmp307 $tmp278 	%line{14} %argrw{"wrr"}
	mul		$tmp345 ___420_k $tmp344 	%argrw{"wrr"}
	add		___420_noiseValue $tmp278 $tmp345 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp346 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp179 $tmp346 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:134
#         perlinFlowNoise3D(position - vector(delta, 0.0, 0.0), flow),
	vector		$tmp348 $const54 $const3 $const3 	%line{134} %argrw{"wrrr"}
	sub		$tmp349 startPosition $tmp348 	%argrw{"wrr"}
	functioncall	$const12 912 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp358 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp358 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp360 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp361 ___420_a 	%argrw{"wr"}
	vector		$tmp359 $tmp360 ___420_a $tmp361 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp359 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp363 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp364 ___420_a 	%argrw{"wr"}
	vector		$tmp362 $tmp363 $tmp364 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp362 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp366 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp367 ___420_a 	%argrw{"wr"}
	vector		$tmp365 ___420_a $tmp366 $tmp367 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp365 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp369 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp368 $tmp369 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp368 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp371 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp370 ___420_a $tmp371 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp370 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp373 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp374 ___420_a 	%argrw{"wr"}
	vector		$tmp372 ___420_a $tmp373 $tmp374 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp372 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp376 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp377 ___420_a 	%argrw{"wr"}
	vector		$tmp375 $tmp376 ___420_a $tmp377 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp375 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp379 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp378 $tmp379 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp378 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp381 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp382 ___420_a 	%argrw{"wr"}
	vector		$tmp380 $tmp381 $tmp382 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp380 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp384 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp383 ___420_a $tmp384 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp383 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp385 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp385 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp387 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp388 ___420_a 	%argrw{"wr"}
	neg		$tmp389 ___420_a 	%argrw{"wr"}
	vector		$tmp386 $tmp387 $tmp388 $tmp389 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp386 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp391 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp392 ___420_a 	%argrw{"wr"}
	vector		$tmp390 ___420_a $tmp391 $tmp392 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp390 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp394 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp393 ___420_a ___420_a $tmp394 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp393 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp396 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp397 ___420_a 	%argrw{"wr"}
	vector		$tmp395 $tmp396 ___420_a $tmp397 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp395 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x $tmp349 $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y $tmp349 $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z $tmp349 $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 709 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp406 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp406 707 708 	%argrw{"r"}
	assign		$tmp407 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp407 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 716 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp408 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp408 714 715 	%argrw{"r"}
	assign		$tmp409 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp409 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 723 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp410 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp410 721 722 	%argrw{"r"}
	assign		$tmp411 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp411 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp413 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp412 $tmp413 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp412 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp415 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp414 $tmp415 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp414 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp417 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp416 $tmp417 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp416 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 743 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp418 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp419 $tmp418 ___420_fx 	%argrw{"wrr"}
	mul		$tmp420 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp421 $tmp420 $const46 	%argrw{"wrr"}
	mul		$tmp422 ___420_fx $tmp421 	%argrw{"wrr"}
	add		$tmp423 $tmp422 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp419 $tmp423 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 751 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp424 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp425 $tmp424 ___420_fy 	%argrw{"wrr"}
	mul		$tmp426 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp427 $tmp426 $const46 	%argrw{"wrr"}
	mul		$tmp428 ___420_fy $tmp427 	%argrw{"wrr"}
	add		$tmp429 $tmp428 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp425 $tmp429 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 759 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp430 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp431 $tmp430 ___420_fz 	%argrw{"wrr"}
	mul		$tmp432 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp433 $tmp432 $const46 	%argrw{"wrr"}
	mul		$tmp434 ___420_fz $tmp433 	%argrw{"wrr"}
	add		$tmp435 $tmp434 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp431 $tmp435 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp436 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp436 ___420_iy 	%argrw{"wrr"}
	aref		$tmp437 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp437 ___420_iz 	%argrw{"wrr"}
	add		$tmp438 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp439 ___420_perm $tmp438 	%argrw{"wrr"}
	add		___420_AB $tmp439 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp440 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp441 ___420_perm $tmp440 	%argrw{"wrr"}
	add		___420_B $tmp441 ___420_iy 	%argrw{"wrr"}
	aref		$tmp442 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp442 ___420_iz 	%argrw{"wrr"}
	add		$tmp443 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp444 ___420_perm $tmp443 	%argrw{"wrr"}
	add		___420_BB $tmp444 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp445 $const48 flow 	%line{115} %argrw{"wrr"}
	sincos		$tmp445 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp449 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 789 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 787 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp449 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp450 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp451 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp450 $tmp451 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp448 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp453 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp454 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 801 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 799 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp453 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp455 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp456 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp455 $tmp456 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp454 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp452 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 805 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp457 $tmp452 $tmp448 	%line{14} %argrw{"wrr"}
	mul		$tmp458 ___420_i $tmp457 	%argrw{"wrr"}
	add		$tmp447 $tmp448 $tmp458 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp461 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp462 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 817 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 815 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp461 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp463 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp464 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp463 $tmp464 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp462 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp460 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp466 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp467 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp468 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 830 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 828 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp466 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp469 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp470 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp469 $tmp470 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp467 $tmp468 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp465 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 834 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp471 $tmp465 $tmp460 	%line{14} %argrw{"wrr"}
	mul		$tmp472 ___420_i $tmp471 	%argrw{"wrr"}
	add		$tmp459 $tmp460 $tmp472 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 838 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp473 $tmp459 $tmp447 	%line{14} %argrw{"wrr"}
	mul		$tmp474 ___420_j $tmp473 	%argrw{"wrr"}
	add		$tmp446 $tmp447 $tmp474 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp478 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp479 ___420_perm $tmp478 	%argrw{"wrr"}
	sub		$tmp480 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 851 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 849 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp479 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp481 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp482 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp481 $tmp482 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp480 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp477 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp484 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp485 ___420_perm $tmp484 	%argrw{"wrr"}
	sub		$tmp486 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp487 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 865 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 863 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp485 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp488 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp489 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp488 $tmp489 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp486 ___420_fy $tmp487 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp483 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 869 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp490 $tmp483 $tmp477 	%line{14} %argrw{"wrr"}
	mul		$tmp491 ___420_i $tmp490 	%argrw{"wrr"}
	add		$tmp476 $tmp477 $tmp491 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp494 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp495 ___420_perm $tmp494 	%argrw{"wrr"}
	sub		$tmp496 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp497 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 883 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 881 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp495 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp498 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp499 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp498 $tmp499 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp496 $tmp497 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp493 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp501 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp502 ___420_perm $tmp501 	%argrw{"wrr"}
	sub		$tmp503 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp504 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp505 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 898 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 896 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp502 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp506 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp507 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp506 $tmp507 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp503 $tmp504 $tmp505 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp500 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 902 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp508 $tmp500 $tmp493 	%line{14} %argrw{"wrr"}
	mul		$tmp509 ___420_i $tmp508 	%argrw{"wrr"}
	add		$tmp492 $tmp493 $tmp509 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 906 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp510 $tmp492 $tmp476 	%line{14} %argrw{"wrr"}
	mul		$tmp511 ___420_j $tmp510 	%argrw{"wrr"}
	add		$tmp475 $tmp476 $tmp511 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 910 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp512 $tmp475 $tmp446 	%line{14} %argrw{"wrr"}
	mul		$tmp513 ___420_k $tmp512 	%argrw{"wrr"}
	add		___420_noiseValue $tmp446 $tmp513 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp514 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp347 $tmp514 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:133
#         perlinFlowNoise3D(position + vector(delta, 0.0, 0.0), flow) -
	sub		$tmp515 $tmp179 $tmp347 	%line{133} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:135
#         perlinFlowNoise3D(position + vector(0.0, delta, 0.0), flow) -
	vector		$tmp517 $const3 $const54 $const3 	%line{135} %argrw{"wrrr"}
	add		$tmp518 startPosition $tmp517 	%argrw{"wrr"}
	functioncall	$const12 1203 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp527 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp527 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp529 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp530 ___420_a 	%argrw{"wr"}
	vector		$tmp528 $tmp529 ___420_a $tmp530 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp528 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp532 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp533 ___420_a 	%argrw{"wr"}
	vector		$tmp531 $tmp532 $tmp533 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp531 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp535 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp536 ___420_a 	%argrw{"wr"}
	vector		$tmp534 ___420_a $tmp535 $tmp536 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp534 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp538 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp537 $tmp538 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp537 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp540 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp539 ___420_a $tmp540 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp539 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp542 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp543 ___420_a 	%argrw{"wr"}
	vector		$tmp541 ___420_a $tmp542 $tmp543 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp541 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp545 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp546 ___420_a 	%argrw{"wr"}
	vector		$tmp544 $tmp545 ___420_a $tmp546 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp544 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp548 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp547 $tmp548 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp547 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp550 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp551 ___420_a 	%argrw{"wr"}
	vector		$tmp549 $tmp550 $tmp551 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp549 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp553 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp552 ___420_a $tmp553 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp552 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp554 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp554 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp556 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp557 ___420_a 	%argrw{"wr"}
	neg		$tmp558 ___420_a 	%argrw{"wr"}
	vector		$tmp555 $tmp556 $tmp557 $tmp558 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp555 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp560 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp561 ___420_a 	%argrw{"wr"}
	vector		$tmp559 ___420_a $tmp560 $tmp561 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp559 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp563 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp562 ___420_a ___420_a $tmp563 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp562 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp565 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp566 ___420_a 	%argrw{"wr"}
	vector		$tmp564 $tmp565 ___420_a $tmp566 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp564 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x $tmp518 $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y $tmp518 $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z $tmp518 $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 1000 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp575 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp575 998 999 	%argrw{"r"}
	assign		$tmp576 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp576 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 1007 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp577 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp577 1005 1006 	%argrw{"r"}
	assign		$tmp578 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp578 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 1014 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp579 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp579 1012 1013 	%argrw{"r"}
	assign		$tmp580 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp580 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp582 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp581 $tmp582 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp581 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp584 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp583 $tmp584 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp583 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp586 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp585 $tmp586 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp585 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 1034 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp587 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp588 $tmp587 ___420_fx 	%argrw{"wrr"}
	mul		$tmp589 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp590 $tmp589 $const46 	%argrw{"wrr"}
	mul		$tmp591 ___420_fx $tmp590 	%argrw{"wrr"}
	add		$tmp592 $tmp591 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp588 $tmp592 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 1042 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp593 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp594 $tmp593 ___420_fy 	%argrw{"wrr"}
	mul		$tmp595 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp596 $tmp595 $const46 	%argrw{"wrr"}
	mul		$tmp597 ___420_fy $tmp596 	%argrw{"wrr"}
	add		$tmp598 $tmp597 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp594 $tmp598 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 1050 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp599 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp600 $tmp599 ___420_fz 	%argrw{"wrr"}
	mul		$tmp601 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp602 $tmp601 $const46 	%argrw{"wrr"}
	mul		$tmp603 ___420_fz $tmp602 	%argrw{"wrr"}
	add		$tmp604 $tmp603 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp600 $tmp604 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp605 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp605 ___420_iy 	%argrw{"wrr"}
	aref		$tmp606 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp606 ___420_iz 	%argrw{"wrr"}
	add		$tmp607 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp608 ___420_perm $tmp607 	%argrw{"wrr"}
	add		___420_AB $tmp608 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp609 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp610 ___420_perm $tmp609 	%argrw{"wrr"}
	add		___420_B $tmp610 ___420_iy 	%argrw{"wrr"}
	aref		$tmp611 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp611 ___420_iz 	%argrw{"wrr"}
	add		$tmp612 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp613 ___420_perm $tmp612 	%argrw{"wrr"}
	add		___420_BB $tmp613 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp614 $const48 flow 	%line{115} %argrw{"wrr"}
	sincos		$tmp614 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp618 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 1080 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1078 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp618 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp619 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp620 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp619 $tmp620 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp617 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp622 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp623 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 1092 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1090 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp622 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp624 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp625 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp624 $tmp625 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp623 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp621 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1096 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp626 $tmp621 $tmp617 	%line{14} %argrw{"wrr"}
	mul		$tmp627 ___420_i $tmp626 	%argrw{"wrr"}
	add		$tmp616 $tmp617 $tmp627 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp630 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp631 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1108 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1106 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp630 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp632 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp633 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp632 $tmp633 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp631 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp629 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp635 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp636 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp637 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1121 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1119 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp635 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp638 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp639 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp638 $tmp639 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp636 $tmp637 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp634 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 1125 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp640 $tmp634 $tmp629 	%line{14} %argrw{"wrr"}
	mul		$tmp641 ___420_i $tmp640 	%argrw{"wrr"}
	add		$tmp628 $tmp629 $tmp641 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1129 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp642 $tmp628 $tmp616 	%line{14} %argrw{"wrr"}
	mul		$tmp643 ___420_j $tmp642 	%argrw{"wrr"}
	add		$tmp615 $tmp616 $tmp643 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp647 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp648 ___420_perm $tmp647 	%argrw{"wrr"}
	sub		$tmp649 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1142 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1140 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp648 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp650 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp651 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp650 $tmp651 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp649 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp646 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp653 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp654 ___420_perm $tmp653 	%argrw{"wrr"}
	sub		$tmp655 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp656 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1156 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1154 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp654 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp657 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp658 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp657 $tmp658 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp655 ___420_fy $tmp656 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp652 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 1160 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp659 $tmp652 $tmp646 	%line{14} %argrw{"wrr"}
	mul		$tmp660 ___420_i $tmp659 	%argrw{"wrr"}
	add		$tmp645 $tmp646 $tmp660 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp663 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp664 ___420_perm $tmp663 	%argrw{"wrr"}
	sub		$tmp665 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp666 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1174 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1172 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp664 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp667 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp668 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp667 $tmp668 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp665 $tmp666 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp662 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp670 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp671 ___420_perm $tmp670 	%argrw{"wrr"}
	sub		$tmp672 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp673 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp674 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1189 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1187 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp671 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp675 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp676 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp675 $tmp676 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp672 $tmp673 $tmp674 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp669 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 1193 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp677 $tmp669 $tmp662 	%line{14} %argrw{"wrr"}
	mul		$tmp678 ___420_i $tmp677 	%argrw{"wrr"}
	add		$tmp661 $tmp662 $tmp678 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 1197 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp679 $tmp661 $tmp645 	%line{14} %argrw{"wrr"}
	mul		$tmp680 ___420_j $tmp679 	%argrw{"wrr"}
	add		$tmp644 $tmp645 $tmp680 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1201 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp681 $tmp644 $tmp615 	%line{14} %argrw{"wrr"}
	mul		$tmp682 ___420_k $tmp681 	%argrw{"wrr"}
	add		___420_noiseValue $tmp615 $tmp682 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp683 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp516 $tmp683 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:136
#         perlinFlowNoise3D(position - vector(0.0, delta, 0.0), flow),
	vector		$tmp685 $const3 $const54 $const3 	%line{136} %argrw{"wrrr"}
	sub		$tmp686 startPosition $tmp685 	%argrw{"wrr"}
	functioncall	$const12 1493 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp695 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp695 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp697 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp698 ___420_a 	%argrw{"wr"}
	vector		$tmp696 $tmp697 ___420_a $tmp698 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp696 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp700 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp701 ___420_a 	%argrw{"wr"}
	vector		$tmp699 $tmp700 $tmp701 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp699 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp703 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp704 ___420_a 	%argrw{"wr"}
	vector		$tmp702 ___420_a $tmp703 $tmp704 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp702 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp706 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp705 $tmp706 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp705 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp708 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp707 ___420_a $tmp708 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp707 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp710 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp711 ___420_a 	%argrw{"wr"}
	vector		$tmp709 ___420_a $tmp710 $tmp711 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp709 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp713 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp714 ___420_a 	%argrw{"wr"}
	vector		$tmp712 $tmp713 ___420_a $tmp714 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp712 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp716 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp715 $tmp716 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp715 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp718 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp719 ___420_a 	%argrw{"wr"}
	vector		$tmp717 $tmp718 $tmp719 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp717 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp721 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp720 ___420_a $tmp721 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp720 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp722 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp722 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp724 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp725 ___420_a 	%argrw{"wr"}
	neg		$tmp726 ___420_a 	%argrw{"wr"}
	vector		$tmp723 $tmp724 $tmp725 $tmp726 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp723 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp728 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp729 ___420_a 	%argrw{"wr"}
	vector		$tmp727 ___420_a $tmp728 $tmp729 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp727 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp731 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp730 ___420_a ___420_a $tmp731 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp730 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp733 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp734 ___420_a 	%argrw{"wr"}
	vector		$tmp732 $tmp733 ___420_a $tmp734 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp732 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x $tmp686 $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y $tmp686 $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z $tmp686 $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 1290 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp743 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp743 1288 1289 	%argrw{"r"}
	assign		$tmp744 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp744 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 1297 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp745 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp745 1295 1296 	%argrw{"r"}
	assign		$tmp746 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp746 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 1304 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp747 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp747 1302 1303 	%argrw{"r"}
	assign		$tmp748 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp748 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp750 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp749 $tmp750 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp749 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp752 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp751 $tmp752 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp751 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp754 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp753 $tmp754 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp753 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 1324 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp755 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp756 $tmp755 ___420_fx 	%argrw{"wrr"}
	mul		$tmp757 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp758 $tmp757 $const46 	%argrw{"wrr"}
	mul		$tmp759 ___420_fx $tmp758 	%argrw{"wrr"}
	add		$tmp760 $tmp759 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp756 $tmp760 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 1332 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp761 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp762 $tmp761 ___420_fy 	%argrw{"wrr"}
	mul		$tmp763 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp764 $tmp763 $const46 	%argrw{"wrr"}
	mul		$tmp765 ___420_fy $tmp764 	%argrw{"wrr"}
	add		$tmp766 $tmp765 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp762 $tmp766 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 1340 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp767 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp768 $tmp767 ___420_fz 	%argrw{"wrr"}
	mul		$tmp769 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp770 $tmp769 $const46 	%argrw{"wrr"}
	mul		$tmp771 ___420_fz $tmp770 	%argrw{"wrr"}
	add		$tmp772 $tmp771 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp768 $tmp772 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp773 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp773 ___420_iy 	%argrw{"wrr"}
	aref		$tmp774 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp774 ___420_iz 	%argrw{"wrr"}
	add		$tmp775 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp776 ___420_perm $tmp775 	%argrw{"wrr"}
	add		___420_AB $tmp776 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp777 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp778 ___420_perm $tmp777 	%argrw{"wrr"}
	add		___420_B $tmp778 ___420_iy 	%argrw{"wrr"}
	aref		$tmp779 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp779 ___420_iz 	%argrw{"wrr"}
	add		$tmp780 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp781 ___420_perm $tmp780 	%argrw{"wrr"}
	add		___420_BB $tmp781 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp782 $const48 flow 	%line{115} %argrw{"wrr"}
	sincos		$tmp782 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp786 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 1370 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1368 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp786 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp787 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp788 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp787 $tmp788 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp785 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp790 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp791 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 1382 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1380 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp790 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp792 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp793 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp792 $tmp793 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp791 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp789 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1386 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp794 $tmp789 $tmp785 	%line{14} %argrw{"wrr"}
	mul		$tmp795 ___420_i $tmp794 	%argrw{"wrr"}
	add		$tmp784 $tmp785 $tmp795 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp798 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp799 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1398 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1396 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp798 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp800 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp801 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp800 $tmp801 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp799 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp797 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp803 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp804 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp805 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1411 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1409 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp803 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp806 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp807 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp806 $tmp807 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp804 $tmp805 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp802 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 1415 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp808 $tmp802 $tmp797 	%line{14} %argrw{"wrr"}
	mul		$tmp809 ___420_i $tmp808 	%argrw{"wrr"}
	add		$tmp796 $tmp797 $tmp809 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1419 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp810 $tmp796 $tmp784 	%line{14} %argrw{"wrr"}
	mul		$tmp811 ___420_j $tmp810 	%argrw{"wrr"}
	add		$tmp783 $tmp784 $tmp811 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp815 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp816 ___420_perm $tmp815 	%argrw{"wrr"}
	sub		$tmp817 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1432 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1430 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp816 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp818 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp819 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp818 $tmp819 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp817 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp814 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp821 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp822 ___420_perm $tmp821 	%argrw{"wrr"}
	sub		$tmp823 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp824 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1446 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1444 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp822 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp825 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp826 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp825 $tmp826 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp823 ___420_fy $tmp824 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp820 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 1450 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp827 $tmp820 $tmp814 	%line{14} %argrw{"wrr"}
	mul		$tmp828 ___420_i $tmp827 	%argrw{"wrr"}
	add		$tmp813 $tmp814 $tmp828 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp831 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp832 ___420_perm $tmp831 	%argrw{"wrr"}
	sub		$tmp833 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp834 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1464 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1462 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp832 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp835 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp836 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp835 $tmp836 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp833 $tmp834 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp830 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp838 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp839 ___420_perm $tmp838 	%argrw{"wrr"}
	sub		$tmp840 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp841 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp842 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1479 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1477 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp839 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp843 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp844 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp843 $tmp844 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp840 $tmp841 $tmp842 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp837 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 1483 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp845 $tmp837 $tmp830 	%line{14} %argrw{"wrr"}
	mul		$tmp846 ___420_i $tmp845 	%argrw{"wrr"}
	add		$tmp829 $tmp830 $tmp846 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 1487 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp847 $tmp829 $tmp813 	%line{14} %argrw{"wrr"}
	mul		$tmp848 ___420_j $tmp847 	%argrw{"wrr"}
	add		$tmp812 $tmp813 $tmp848 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1491 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp849 $tmp812 $tmp783 	%line{14} %argrw{"wrr"}
	mul		$tmp850 ___420_k $tmp849 	%argrw{"wrr"}
	add		___420_noiseValue $tmp783 $tmp850 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp851 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp684 $tmp851 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:135
#         perlinFlowNoise3D(position + vector(0.0, delta, 0.0), flow) -
	sub		$tmp852 $tmp516 $tmp684 	%line{135} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:137
#         perlinFlowNoise3D(position + vector(0.0, 0.0, delta), flow) -
	vector		$tmp854 $const3 $const3 $const54 	%line{137} %argrw{"wrrr"}
	add		$tmp855 startPosition $tmp854 	%argrw{"wrr"}
	functioncall	$const12 1784 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp864 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp864 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp866 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp867 ___420_a 	%argrw{"wr"}
	vector		$tmp865 $tmp866 ___420_a $tmp867 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp865 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp869 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp870 ___420_a 	%argrw{"wr"}
	vector		$tmp868 $tmp869 $tmp870 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp868 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp872 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp873 ___420_a 	%argrw{"wr"}
	vector		$tmp871 ___420_a $tmp872 $tmp873 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp871 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp875 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp874 $tmp875 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp874 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp877 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp876 ___420_a $tmp877 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp876 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp879 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp880 ___420_a 	%argrw{"wr"}
	vector		$tmp878 ___420_a $tmp879 $tmp880 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp878 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp882 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp883 ___420_a 	%argrw{"wr"}
	vector		$tmp881 $tmp882 ___420_a $tmp883 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp881 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp885 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp884 $tmp885 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp884 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp887 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp888 ___420_a 	%argrw{"wr"}
	vector		$tmp886 $tmp887 $tmp888 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp886 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp890 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp889 ___420_a $tmp890 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp889 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp891 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp891 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp893 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp894 ___420_a 	%argrw{"wr"}
	neg		$tmp895 ___420_a 	%argrw{"wr"}
	vector		$tmp892 $tmp893 $tmp894 $tmp895 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp892 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp897 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp898 ___420_a 	%argrw{"wr"}
	vector		$tmp896 ___420_a $tmp897 $tmp898 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp896 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp900 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp899 ___420_a ___420_a $tmp900 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp899 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp902 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp903 ___420_a 	%argrw{"wr"}
	vector		$tmp901 $tmp902 ___420_a $tmp903 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp901 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x $tmp855 $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y $tmp855 $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z $tmp855 $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 1581 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp912 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp912 1579 1580 	%argrw{"r"}
	assign		$tmp913 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp913 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 1588 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp914 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp914 1586 1587 	%argrw{"r"}
	assign		$tmp915 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp915 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 1595 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp916 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp916 1593 1594 	%argrw{"r"}
	assign		$tmp917 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp917 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp919 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp918 $tmp919 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp918 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp921 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp920 $tmp921 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp920 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp923 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp922 $tmp923 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp922 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 1615 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp924 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp925 $tmp924 ___420_fx 	%argrw{"wrr"}
	mul		$tmp926 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp927 $tmp926 $const46 	%argrw{"wrr"}
	mul		$tmp928 ___420_fx $tmp927 	%argrw{"wrr"}
	add		$tmp929 $tmp928 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp925 $tmp929 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 1623 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp930 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp931 $tmp930 ___420_fy 	%argrw{"wrr"}
	mul		$tmp932 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp933 $tmp932 $const46 	%argrw{"wrr"}
	mul		$tmp934 ___420_fy $tmp933 	%argrw{"wrr"}
	add		$tmp935 $tmp934 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp931 $tmp935 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 1631 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp936 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp937 $tmp936 ___420_fz 	%argrw{"wrr"}
	mul		$tmp938 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp939 $tmp938 $const46 	%argrw{"wrr"}
	mul		$tmp940 ___420_fz $tmp939 	%argrw{"wrr"}
	add		$tmp941 $tmp940 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp937 $tmp941 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp942 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp942 ___420_iy 	%argrw{"wrr"}
	aref		$tmp943 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp943 ___420_iz 	%argrw{"wrr"}
	add		$tmp944 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp945 ___420_perm $tmp944 	%argrw{"wrr"}
	add		___420_AB $tmp945 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp946 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp947 ___420_perm $tmp946 	%argrw{"wrr"}
	add		___420_B $tmp947 ___420_iy 	%argrw{"wrr"}
	aref		$tmp948 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp948 ___420_iz 	%argrw{"wrr"}
	add		$tmp949 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp950 ___420_perm $tmp949 	%argrw{"wrr"}
	add		___420_BB $tmp950 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp951 $const48 flow 	%line{115} %argrw{"wrr"}
	sincos		$tmp951 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp955 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 1661 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1659 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp955 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp956 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp957 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp956 $tmp957 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp954 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp959 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp960 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 1673 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1671 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp959 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp961 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp962 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp961 $tmp962 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp960 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp958 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1677 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp963 $tmp958 $tmp954 	%line{14} %argrw{"wrr"}
	mul		$tmp964 ___420_i $tmp963 	%argrw{"wrr"}
	add		$tmp953 $tmp954 $tmp964 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp967 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp968 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1689 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1687 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp967 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp969 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp970 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp969 $tmp970 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp968 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp966 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp972 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp973 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp974 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1702 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1700 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp972 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp975 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp976 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp975 $tmp976 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp973 $tmp974 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp971 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 1706 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp977 $tmp971 $tmp966 	%line{14} %argrw{"wrr"}
	mul		$tmp978 ___420_i $tmp977 	%argrw{"wrr"}
	add		$tmp965 $tmp966 $tmp978 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1710 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp979 $tmp965 $tmp953 	%line{14} %argrw{"wrr"}
	mul		$tmp980 ___420_j $tmp979 	%argrw{"wrr"}
	add		$tmp952 $tmp953 $tmp980 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp984 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp985 ___420_perm $tmp984 	%argrw{"wrr"}
	sub		$tmp986 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1723 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1721 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp985 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp987 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp988 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp987 $tmp988 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp986 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp983 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp990 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp991 ___420_perm $tmp990 	%argrw{"wrr"}
	sub		$tmp992 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp993 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1737 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1735 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp991 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp994 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp995 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp994 $tmp995 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp992 ___420_fy $tmp993 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp989 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 1741 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp996 $tmp989 $tmp983 	%line{14} %argrw{"wrr"}
	mul		$tmp997 ___420_i $tmp996 	%argrw{"wrr"}
	add		$tmp982 $tmp983 $tmp997 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp1000 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp1001 ___420_perm $tmp1000 	%argrw{"wrr"}
	sub		$tmp1002 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp1003 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1755 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1753 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1001 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1004 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1005 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1004 $tmp1005 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp1002 $tmp1003 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp999 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp1007 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp1008 ___420_perm $tmp1007 	%argrw{"wrr"}
	sub		$tmp1009 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp1010 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp1011 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 1770 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1768 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1008 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1012 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1013 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1012 $tmp1013 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp1009 $tmp1010 $tmp1011 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1006 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 1774 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1014 $tmp1006 $tmp999 	%line{14} %argrw{"wrr"}
	mul		$tmp1015 ___420_i $tmp1014 	%argrw{"wrr"}
	add		$tmp998 $tmp999 $tmp1015 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 1778 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1016 $tmp998 $tmp982 	%line{14} %argrw{"wrr"}
	mul		$tmp1017 ___420_j $tmp1016 	%argrw{"wrr"}
	add		$tmp981 $tmp982 $tmp1017 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1782 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1018 $tmp981 $tmp952 	%line{14} %argrw{"wrr"}
	mul		$tmp1019 ___420_k $tmp1018 	%argrw{"wrr"}
	add		___420_noiseValue $tmp952 $tmp1019 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp1020 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp853 $tmp1020 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:138
#         perlinFlowNoise3D(position - vector(0.0, 0.0, delta), flow)
	vector		$tmp1022 $const3 $const3 $const54 	%line{138} %argrw{"wrrr"}
	sub		$tmp1023 startPosition $tmp1022 	%argrw{"wrr"}
	functioncall	$const12 2074 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:20
#     int perm[512] = {
	assign		___420_perm $const13 	%line{20} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:51
#     float a = 0.81649658;
	assign		___420_a $const14 	%line{51} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const1 $const15 	%line{53} %argrw{"wrr"}
	aassign		___420_gradientUBase $const17 $const16 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const19 $const18 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const21 $const20 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const23 $const22 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const25 $const24 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const27 $const26 	%argrw{"wrr"}
	aassign		___420_gradientUBase $const29 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	vector		$tmp1032 ___420_a ___420_a ___420_a 	%line{58} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const30 $tmp1032 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:58
#         vector( a,  a,  a), vector(-a,  a, -a),
	neg		$tmp1034 ___420_a 	%line{58} %argrw{"wr"}
	neg		$tmp1035 ___420_a 	%argrw{"wr"}
	vector		$tmp1033 $tmp1034 ___420_a $tmp1035 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const31 $tmp1033 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp1037 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp1038 ___420_a 	%argrw{"wr"}
	vector		$tmp1036 $tmp1037 $tmp1038 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const32 $tmp1036 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:59
#         vector(-a, -a,  a), vector( a, -a, -a),
	neg		$tmp1040 ___420_a 	%line{59} %argrw{"wr"}
	neg		$tmp1041 ___420_a 	%argrw{"wr"}
	vector		$tmp1039 ___420_a $tmp1040 $tmp1041 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const33 $tmp1039 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp1043 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp1042 $tmp1043 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const34 $tmp1042 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:60
#         vector(-a,  a,  a), vector( a, -a,  a),
	neg		$tmp1045 ___420_a 	%line{60} %argrw{"wr"}
	vector		$tmp1044 ___420_a $tmp1045 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const35 $tmp1044 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp1047 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp1048 ___420_a 	%argrw{"wr"}
	vector		$tmp1046 ___420_a $tmp1047 $tmp1048 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const36 $tmp1046 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:61
#         vector( a, -a, -a), vector(-a,  a, -a)
	neg		$tmp1050 ___420_a 	%line{61} %argrw{"wr"}
	neg		$tmp1051 ___420_a 	%argrw{"wr"}
	vector		$tmp1049 $tmp1050 ___420_a $tmp1051 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:53
#     vector gradientUBase[16] = {
	aassign		___420_gradientUBase $const37 $tmp1049 	%line{53} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp1053 ___420_a 	%line{65} %argrw{"wr"}
	vector		$tmp1052 $tmp1053 ___420_a ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const1 $tmp1052 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:65
#         vector(-a,  a,  a), vector(-a, -a,  a),
	neg		$tmp1055 ___420_a 	%line{65} %argrw{"wr"}
	neg		$tmp1056 ___420_a 	%argrw{"wr"}
	vector		$tmp1054 $tmp1055 $tmp1056 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const17 $tmp1054 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	neg		$tmp1058 ___420_a 	%line{66} %argrw{"wr"}
	vector		$tmp1057 ___420_a $tmp1058 ___420_a 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const19 $tmp1057 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:66
#         vector( a, -a,  a), vector( a,  a,  a),
	vector		$tmp1059 ___420_a ___420_a ___420_a 	%line{66} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const21 $tmp1059 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp1061 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp1062 ___420_a 	%argrw{"wr"}
	neg		$tmp1063 ___420_a 	%argrw{"wr"}
	vector		$tmp1060 $tmp1061 $tmp1062 $tmp1063 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const23 $tmp1060 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:67
#         vector(-a, -a, -a), vector( a, -a, -a),
	neg		$tmp1065 ___420_a 	%line{67} %argrw{"wr"}
	neg		$tmp1066 ___420_a 	%argrw{"wr"}
	vector		$tmp1064 ___420_a $tmp1065 $tmp1066 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const25 $tmp1064 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp1068 ___420_a 	%line{68} %argrw{"wr"}
	vector		$tmp1067 ___420_a ___420_a $tmp1068 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const27 $tmp1067 	%line{64} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:68
#         vector( a,  a, -a), vector(-a,  a, -a),
	neg		$tmp1070 ___420_a 	%line{68} %argrw{"wr"}
	neg		$tmp1071 ___420_a 	%argrw{"wr"}
	vector		$tmp1069 $tmp1070 ___420_a $tmp1071 	%argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:64
#     vector gradientVBase[16] = {
	aassign		___420_gradientVBase $const29 $tmp1069 	%line{64} %argrw{"wrr"}
	aassign		___420_gradientVBase $const30 $const38 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const31 $const39 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const32 $const40 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const33 $const41 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const34 $const15 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const35 $const18 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const36 $const24 	%argrw{"wrr"}
	aassign		___420_gradientVBase $const37 $const28 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:89
#     float x = position[0];
	compref		___420_x $tmp1023 $const1 	%line{89} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:90
#     float y = position[1];
	compref		___420_y $tmp1023 $const17 	%line{90} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:91
#     float z = position[2];
	compref		___420_z $tmp1023 $const19 	%line{91} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:93
#     int ix = fastFloor(x);
	functioncall	$const42 1871 	%line{93} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp1080 ___420_x $const1 	%line{6} %argrw{"wrr"}
	if		$tmp1080 1869 1870 	%argrw{"r"}
	assign		$tmp1081 ___420_x 	%argrw{"wr"}
	sub		___420_ix $tmp1081 $const17 	%argrw{"wrr"}
	assign		___420_ix ___420_x 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:94
#     int iy = fastFloor(y);
	functioncall	$const42 1878 	%line{94} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp1082 ___420_y $const1 	%line{6} %argrw{"wrr"}
	if		$tmp1082 1876 1877 	%argrw{"r"}
	assign		$tmp1083 ___420_y 	%argrw{"wr"}
	sub		___420_iy $tmp1083 $const17 	%argrw{"wrr"}
	assign		___420_iy ___420_y 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:95
#     int iz = fastFloor(z);
	functioncall	$const42 1885 	%line{95} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:6
#     return (x < 0) ? int(x) - 1 : int(x);
	lt		$tmp1084 ___420_z $const1 	%line{6} %argrw{"wrr"}
	if		$tmp1084 1883 1884 	%argrw{"r"}
	assign		$tmp1085 ___420_z 	%argrw{"wr"}
	sub		___420_iz $tmp1085 $const17 	%argrw{"wrr"}
	assign		___420_iz ___420_z 	%argrw{"wr"}
	return
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:97
#     float fx = x - float(ix);
	assign		$tmp1087 ___420_ix 	%line{97} %argrw{"wr"}
	assign		$tmp1086 $tmp1087 	%argrw{"wr"}
	sub		___420_fx ___420_x $tmp1086 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:98
#     float fy = y - float(iy);
	assign		$tmp1089 ___420_iy 	%line{98} %argrw{"wr"}
	assign		$tmp1088 $tmp1089 	%argrw{"wr"}
	sub		___420_fy ___420_y $tmp1088 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:99
#     float fz = z - float(iz);
	assign		$tmp1091 ___420_iz 	%line{99} %argrw{"wr"}
	assign		$tmp1090 $tmp1091 	%argrw{"wr"}
	sub		___420_fz ___420_z $tmp1090 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:101
#     ix = ix & 255;
	bitand		___420_ix ___420_ix $const43 	%line{101} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:102
#     iy = iy & 255;
	bitand		___420_iy ___420_iy $const43 	%line{102} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:103
#     iz = iz & 255;
	bitand		___420_iz ___420_iz $const43 	%line{103} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:105
#     float i = fade(fx);
	functioncall	$const44 1905 	%line{105} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp1092 ___420_fx ___420_fx 	%line{10} %argrw{"wrr"}
	mul		$tmp1093 $tmp1092 ___420_fx 	%argrw{"wrr"}
	mul		$tmp1094 ___420_fx $const45 	%argrw{"wrr"}
	sub		$tmp1095 $tmp1094 $const46 	%argrw{"wrr"}
	mul		$tmp1096 ___420_fx $tmp1095 	%argrw{"wrr"}
	add		$tmp1097 $tmp1096 $const47 	%argrw{"wrr"}
	mul		___420_i $tmp1093 $tmp1097 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:106
#     float j = fade(fy);
	functioncall	$const44 1913 	%line{106} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp1098 ___420_fy ___420_fy 	%line{10} %argrw{"wrr"}
	mul		$tmp1099 $tmp1098 ___420_fy 	%argrw{"wrr"}
	mul		$tmp1100 ___420_fy $const45 	%argrw{"wrr"}
	sub		$tmp1101 $tmp1100 $const46 	%argrw{"wrr"}
	mul		$tmp1102 ___420_fy $tmp1101 	%argrw{"wrr"}
	add		$tmp1103 $tmp1102 $const47 	%argrw{"wrr"}
	mul		___420_j $tmp1099 $tmp1103 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:107
#     float k = fade(fz);
	functioncall	$const44 1921 	%line{107} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:10
#     return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
	mul		$tmp1104 ___420_fz ___420_fz 	%line{10} %argrw{"wrr"}
	mul		$tmp1105 $tmp1104 ___420_fz 	%argrw{"wrr"}
	mul		$tmp1106 ___420_fz $const45 	%argrw{"wrr"}
	sub		$tmp1107 $tmp1106 $const46 	%argrw{"wrr"}
	mul		$tmp1108 ___420_fz $tmp1107 	%argrw{"wrr"}
	add		$tmp1109 $tmp1108 $const47 	%argrw{"wrr"}
	mul		___420_k $tmp1105 $tmp1109 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:109
#     int A = perm[ix    ] + iy, AA = perm[A] + iz, AB = perm[A + 1] + iz;
	aref		$tmp1110 ___420_perm ___420_ix 	%line{109} %argrw{"wrr"}
	add		___420_A $tmp1110 ___420_iy 	%argrw{"wrr"}
	aref		$tmp1111 ___420_perm ___420_A 	%argrw{"wrr"}
	add		___420_AA $tmp1111 ___420_iz 	%argrw{"wrr"}
	add		$tmp1112 ___420_A $const17 	%argrw{"wrr"}
	aref		$tmp1113 ___420_perm $tmp1112 	%argrw{"wrr"}
	add		___420_AB $tmp1113 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:110
#     int B = perm[ix + 1] + iy, BA = perm[B] + iz, BB = perm[B + 1] + iz;
	add		$tmp1114 ___420_ix $const17 	%line{110} %argrw{"wrr"}
	aref		$tmp1115 ___420_perm $tmp1114 	%argrw{"wrr"}
	add		___420_B $tmp1115 ___420_iy 	%argrw{"wrr"}
	aref		$tmp1116 ___420_perm ___420_B 	%argrw{"wrr"}
	add		___420_BA $tmp1116 ___420_iz 	%argrw{"wrr"}
	add		$tmp1117 ___420_B $const17 	%argrw{"wrr"}
	aref		$tmp1118 ___420_perm $tmp1117 	%argrw{"wrr"}
	add		___420_BB $tmp1118 ___420_iz 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:113
#     float sinTheta = 0.0;
	assign		___420_sinTheta $const3 	%line{113} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:114
#     float cosTheta = 0.0;
	assign		___420_cosTheta $const3 	%line{114} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:115
#     sincos(M_2PI * flow, sinTheta, cosTheta);
	mul		$tmp1119 $const48 flow 	%line{115} %argrw{"wrr"}
	sincos		$tmp1119 ___420_sinTheta ___420_cosTheta 	%argrw{"rww"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	aref		$tmp1123 ___420_perm ___420_AA 	%line{118} %argrw{"wrr"}
	functioncall	$const49 1951 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1949 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1123 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1124 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1125 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1124 $tmp1125 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1122 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:119
#                                 gradientDot(perm[BA    ], sinTheta, cosTheta, fx - 1.0, fy      , fz      )),
	aref		$tmp1127 ___420_perm ___420_BA 	%line{119} %argrw{"wrr"}
	sub		$tmp1128 ___420_fx $const11 	%argrw{"wrr"}
	functioncall	$const49 1963 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1961 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1127 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1129 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1130 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1129 $tmp1130 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp1128 ___420_fy ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1126 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 1967 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1131 $tmp1126 $tmp1122 	%line{14} %argrw{"wrr"}
	mul		$tmp1132 ___420_i $tmp1131 	%argrw{"wrr"}
	add		$tmp1121 $tmp1122 $tmp1132 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	aref		$tmp1135 ___420_perm ___420_AB 	%line{120} %argrw{"wrr"}
	sub		$tmp1136 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1979 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1977 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1135 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1137 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1138 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1137 $tmp1138 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp1136 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1134 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:121
#                                 gradientDot(perm[BB    ], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz      ))),
	aref		$tmp1140 ___420_perm ___420_BB 	%line{121} %argrw{"wrr"}
	sub		$tmp1141 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp1142 ___420_fy $const11 	%argrw{"wrr"}
	functioncall	$const49 1992 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 1990 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1140 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1143 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1144 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1143 $tmp1144 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp1141 $tmp1142 ___420_fz 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1139 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:120
#                         lerp(i, gradientDot(perm[AB    ], sinTheta, cosTheta, fx      , fy - 1.0, fz      ),
	functioncall	$const52 1996 	%line{120} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1145 $tmp1139 $tmp1134 	%line{14} %argrw{"wrr"}
	mul		$tmp1146 ___420_i $tmp1145 	%argrw{"wrr"}
	add		$tmp1133 $tmp1134 $tmp1146 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 2000 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1147 $tmp1133 $tmp1121 	%line{14} %argrw{"wrr"}
	mul		$tmp1148 ___420_j $tmp1147 	%argrw{"wrr"}
	add		$tmp1120 $tmp1121 $tmp1148 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	add		$tmp1152 ___420_AA $const17 	%line{122} %argrw{"wrr"}
	aref		$tmp1153 ___420_perm $tmp1152 	%argrw{"wrr"}
	sub		$tmp1154 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 2013 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 2011 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1153 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1155 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1156 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1155 $tmp1156 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx ___420_fy $tmp1154 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1151 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:123
#                                 gradientDot(perm[BA + 1], sinTheta, cosTheta, fx - 1.0, fy      , fz - 1.0)),
	add		$tmp1158 ___420_BA $const17 	%line{123} %argrw{"wrr"}
	aref		$tmp1159 ___420_perm $tmp1158 	%argrw{"wrr"}
	sub		$tmp1160 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp1161 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 2027 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 2025 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1159 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1162 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1163 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1162 $tmp1163 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp1160 ___420_fy $tmp1161 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1157 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 2031 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1164 $tmp1157 $tmp1151 	%line{14} %argrw{"wrr"}
	mul		$tmp1165 ___420_i $tmp1164 	%argrw{"wrr"}
	add		$tmp1150 $tmp1151 $tmp1165 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	add		$tmp1168 ___420_AB $const17 	%line{124} %argrw{"wrr"}
	aref		$tmp1169 ___420_perm $tmp1168 	%argrw{"wrr"}
	sub		$tmp1170 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp1171 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 2045 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 2043 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1169 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1172 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1173 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1172 $tmp1173 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value ___420_fx $tmp1170 $tmp1171 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1167 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:125
#                                 gradientDot(perm[BB + 1], sinTheta, cosTheta, fx - 1.0, fy - 1.0, fz - 1.0))));
	add		$tmp1175 ___420_BB $const17 	%line{125} %argrw{"wrr"}
	aref		$tmp1176 ___420_perm $tmp1175 	%argrw{"wrr"}
	sub		$tmp1177 ___420_fx $const11 	%argrw{"wrr"}
	sub		$tmp1178 ___420_fy $const11 	%argrw{"wrr"}
	sub		$tmp1179 ___420_fz $const11 	%argrw{"wrr"}
	functioncall	$const49 2060 	%argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:84
#         vector gradient = getGradient(index, sinTheta, cosTheta);
	functioncall	$const50 2058 	%line{84} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:77
#         int safeIndex = index % 16;
	mod		___421_safeIndex $tmp1176 $const51 	%line{77} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:78
#         vector gradientU = gradientUBase[safeIndex];
	aref		___421_gradientU ___420_gradientUBase ___421_safeIndex 	%line{78} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:79
#         vector gradientV = gradientVBase[safeIndex];
	aref		___421_gradientV ___420_gradientVBase ___421_safeIndex 	%line{79} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:80
#         return cosTheta * gradientU + sinTheta * gradientV;
	mul		$tmp1180 ___420_cosTheta ___421_gradientU 	%line{80} %argrw{"wrr"}
	mul		$tmp1181 ___420_sinTheta ___421_gradientV 	%argrw{"wrr"}
	add		___422_gradient $tmp1180 $tmp1181 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:85
#         vector value = vector(x, y, z);
	vector		___422_value $tmp1177 $tmp1178 $tmp1179 	%line{85} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:86
#         return dot(gradient, value);
	dot		$tmp1174 ___422_gradient ___422_value 	%line{86} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:124
#                         lerp(i, gradientDot(perm[AB + 1], sinTheta, cosTheta, fx      , fy - 1.0, fz - 1.0),
	functioncall	$const52 2064 	%line{124} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1182 $tmp1174 $tmp1167 	%line{14} %argrw{"wrr"}
	mul		$tmp1183 ___420_i $tmp1182 	%argrw{"wrr"}
	add		$tmp1166 $tmp1167 $tmp1183 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:122
#                 lerp(j, lerp(i, gradientDot(perm[AA + 1], sinTheta, cosTheta, fx      , fy      , fz - 1.0),
	functioncall	$const52 2068 	%line{122} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1184 $tmp1166 $tmp1150 	%line{14} %argrw{"wrr"}
	mul		$tmp1185 ___420_j $tmp1184 	%argrw{"wrr"}
	add		$tmp1149 $tmp1150 $tmp1185 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:118
#         lerp(k, lerp(j, lerp(i, gradientDot(perm[AA    ], sinTheta, cosTheta, fx      , fy      , fz      ),
	functioncall	$const52 2072 	%line{118} %argrw{"r"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:14
#     return a + t * (b - a);
	sub		$tmp1186 $tmp1149 $tmp1120 	%line{14} %argrw{"wrr"}
	mul		$tmp1187 ___420_k $tmp1186 	%argrw{"wrr"}
	add		___420_noiseValue $tmp1120 $tmp1187 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:128
#     return 0.5 * noiseValue + 0.5;
	mul		$tmp1188 $const53 ___420_noiseValue 	%line{128} %argrw{"wrr"}
	add		$tmp1021 $tmp1188 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:137
#         perlinFlowNoise3D(position + vector(0.0, 0.0, delta), flow) -
	sub		$tmp1189 $tmp853 $tmp1021 	%line{137} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:132
#     vector result = vector(
	vector		___423_result $tmp515 $tmp852 $tmp1189 	%line{132} %argrw{"wrrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:141
#     result /= (2.0 * delta);
	mul		$tmp1190 $const56 $const54 	%line{141} %argrw{"wrr"}
	div		___423_result ___423_result $tmp1190 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:143
#     return result;
	assign		$tmp178 ___423_result 	%line{143} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:169
#             position -= advectionAmount * noiseOctave * perlinFlowNoise3DGradient(position, flow, 0.01);
	mul		$tmp1191 $tmp177 $tmp178 	%line{169} %argrw{"wrr"}
	sub		startPosition startPosition $tmp1191 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:172
#         position *= lacunarity;
	mul		startPosition startPosition lacunarity 	%line{172} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:173
#         flowValue *= flowRate;
	mul		___424_flowValue ___424_flowValue flow_rate 	%line{173} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:174
#         amplitude *= gain;
	mul		___424_amplitude ___424_amplitude gain 	%line{174} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:175
#         advectionAmount *= advect;
	mul		___424_advectionAmount ___424_advectionAmount advect 	%line{175} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:164
#     for (int octave = 0; octave < octaveCount; ++octave) {
	add		___425_octave ___425_octave $const17 	%line{164} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:178
#     return noiseValue;
	assign		noiseValue ___424_noiseValue 	%line{178} %argrw{"wr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:225
#     noiseValue = 0.5 * noiseValue + 0.5;
	mul		$tmp1192 $const53 noiseValue 	%line{225} %argrw{"wrr"}
	add		noiseValue $tmp1192 $const53 	%argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:226
#     noiseValue = pow(noiseValue, attenuation);
	pow		noiseValue noiseValue attenuation 	%line{226} %argrw{"wrr"}
# /WORK_DATA/develop/dcc/packages/app/renderman/25.2/source/osl/DxPerlinFlowNoise.osl:228
#     result = color(noiseValue);
	assign		result noiseValue 	%line{228} %argrw{"wr"}
	end
