OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader DxNCLBlendWrinkles
param	float	strength	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1}  %read{20,20} %write{2147483647,-1}
param	float	depth	1		%read{21,21} %write{2147483647,-1}
param	normal	baseNormal	0 0 0		%read{24,24} %write{2147483647,-1}
param	normal	auNormal	0 0 0		%read{22,22} %write{2147483647,-1}
param	float	baseDisF	0		%read{27,27} %write{2147483647,-1}
param	float	auDisF	0		%read{26,26} %write{2147483647,-1}
param	color	AU01_x_AU02_L_x_AU02_R	0 0 0		%meta{string,widget,"null"} %meta{int,connectable,0} %meta{int,lockgeom,0}  %read{6,6} %write{2147483647,-1}
param	color	AU04_L_x_AU04_R_x_AU06_L	0 0 0		%meta{string,widget,"null"} %meta{int,connectable,0} %meta{int,lockgeom,0}  %read{8,8} %write{2147483647,-1}
param	color	AU06_R_x_AU09_L_x_AU09_R	0 0 0		%meta{string,widget,"null"} %meta{int,connectable,0} %meta{int,lockgeom,0}  %read{11,11} %write{2147483647,-1}
param	color	AU10_L_x_AU10_R_x_AU11_L	0 0 0		%meta{string,widget,"null"} %meta{int,connectable,0} %meta{int,lockgeom,0}  %read{14,14} %write{2147483647,-1}
param	color	AU11_R_x_AU20_L_x_AU20_R	0 0 0		%meta{string,widget,"null"} %meta{int,connectable,0} %meta{int,lockgeom,0}  %read{17,17} %write{2147483647,-1}
param	color	mask_01_02	0 0 0		%read{5,5} %write{2147483647,-1}
param	float	w_01_02	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{5,5} %write{2147483647,-1}
param	color	mask_04_06L	0 0 0		%read{7,7} %write{2147483647,-1}
param	float	w_04	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{1,1} %write{2147483647,-1}
param	float	w_06	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{1,2} %write{2147483647,-1}
param	color	mask_06R_09	0 0 0		%read{10,10} %write{2147483647,-1}
param	float	w_09	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{2,2} %write{2147483647,-1}
param	color	mask_10_11L	0 0 0		%read{13,13} %write{2147483647,-1}
param	float	w_10	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{3,3} %write{2147483647,-1}
param	float	w_11	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{3,4} %write{2147483647,-1}
param	color	mask_11R_20	0 0 0		%read{16,16} %write{2147483647,-1}
param	float	w_20	1		%meta{int,slider,1} %meta{int,min,0} %meta{int,max,1} %meta{int,connectable,0}  %read{4,4} %write{2147483647,-1}
oparam	float	outWeight	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{21,21}
oparam	normal	outNormal	0 0 0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{0,25} %initexpr
oparam	float	outDisF	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{27,27}
global	normal	N	%read{0,22} %write{2147483647,-1}
local	color	w_04_06L	%read{7,7} %write{1,1}
local	color	w_06R_09	%read{10,10} %write{2,2}
local	color	w_10_11L	%read{13,13} %write{3,3}
local	color	w_11R_20	%read{16,16} %write{4,4}
local	float	w	%read{9,26} %write{6,20}
local	normal	dNormal	%read{24,24} %write{23,23}
temp	color	$tmp1	%read{6,6} %write{5,5}
temp	float	$tmp2	%read{9,9} %write{8,8}
temp	color	$tmp3	%read{8,8} %write{7,7}
temp	float	$tmp4	%read{12,12} %write{11,11}
temp	color	$tmp5	%read{11,11} %write{10,10}
temp	float	$tmp6	%read{15,15} %write{14,14}
temp	color	$tmp7	%read{14,14} %write{13,13}
temp	float	$tmp8	%read{18,18} %write{17,17}
temp	color	$tmp9	%read{17,17} %write{16,16}
temp	float	$tmp10	%read{20,20} %write{19,19}
const	float	$const1	1		%read{19,19} %write{2147483647,-1}
temp	normal	$tmp11	%read{23,23} %write{22,22}
temp	normal	$tmp12	%read{25,25} %write{24,24}
temp	float	$tmp13	%read{27,27} %write{26,26}
code outNormal
# DxNCLBlendWrinkles.osl:70
#     output normal outNormal = N [[ string widget = "null" ]],
	assign		outNormal N 	%filename{"DxNCLBlendWrinkles.osl"} %line{70} %argrw{"wr"}
code ___main___
# DxNCLBlendWrinkles.osl:73
#     color w_04_06L = color(w_04, w_04, w_06);
	color		w_04_06L w_04 w_04 w_06 	%filename{"DxNCLBlendWrinkles.osl"} %line{73} %argrw{"wrrr"}
# DxNCLBlendWrinkles.osl:74
#     color w_06R_09 = color(w_06, w_09, w_09);
	color		w_06R_09 w_06 w_09 w_09 	%line{74} %argrw{"wrrr"}
# DxNCLBlendWrinkles.osl:75
#     color w_10_11L = color(w_10, w_10, w_11);
	color		w_10_11L w_10 w_10 w_11 	%line{75} %argrw{"wrrr"}
# DxNCLBlendWrinkles.osl:76
#     color w_11R_20 = color(w_11, w_20, w_20);
	color		w_11R_20 w_11 w_20 w_20 	%line{76} %argrw{"wrrr"}
# DxNCLBlendWrinkles.osl:78
#     float w = dot(AU01_x_AU02_L_x_AU02_R, w_01_02 * mask_01_02);
	mul		$tmp1 w_01_02 mask_01_02 	%line{78} %argrw{"wrr"}
	dot		w AU01_x_AU02_L_x_AU02_R $tmp1 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:79
#     w += dot(AU04_L_x_AU04_R_x_AU06_L, w_04_06L * mask_04_06L);
	mul		$tmp3 w_04_06L mask_04_06L 	%line{79} %argrw{"wrr"}
	dot		$tmp2 AU04_L_x_AU04_R_x_AU06_L $tmp3 	%argrw{"wrr"}
	add		w w $tmp2 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:80
#     w += dot(AU06_R_x_AU09_L_x_AU09_R, w_06R_09 * mask_06R_09);
	mul		$tmp5 w_06R_09 mask_06R_09 	%line{80} %argrw{"wrr"}
	dot		$tmp4 AU06_R_x_AU09_L_x_AU09_R $tmp5 	%argrw{"wrr"}
	add		w w $tmp4 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:81
#     w += dot(AU10_L_x_AU10_R_x_AU11_L, w_10_11L * mask_10_11L);
	mul		$tmp7 w_10_11L mask_10_11L 	%line{81} %argrw{"wrr"}
	dot		$tmp6 AU10_L_x_AU10_R_x_AU11_L $tmp7 	%argrw{"wrr"}
	add		w w $tmp6 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:82
#     w += dot(AU11_R_x_AU20_L_x_AU20_R, w_11R_20 * mask_11R_20);
	mul		$tmp9 w_11R_20 mask_11R_20 	%line{82} %argrw{"wrr"}
	dot		$tmp8 AU11_R_x_AU20_L_x_AU20_R $tmp9 	%argrw{"wrr"}
	add		w w $tmp8 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:83
#     w = min(w, 1.0) * strength;
	min		$tmp10 w $const1 	%line{83} %argrw{"wrr"}
	mul		w $tmp10 strength 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:85
#     outWeight = w * depth;
	mul		outWeight w depth 	%line{85} %argrw{"wrr"}
# DxNCLBlendWrinkles.osl:87
#     normal dNormal = w * (auNormal - N);
	sub		$tmp11 auNormal N 	%line{87} %argrw{"wrr"}
	mul		dNormal w $tmp11 	%argrw{"wrr"}
# DxNCLBlendWrinkles.osl:88
#     outNormal = normalize(baseNormal + dNormal);
	add		$tmp12 baseNormal dNormal 	%line{88} %argrw{"wrr"}
	normalize	outNormal $tmp12 	%argrw{"wr"}
# DxNCLBlendWrinkles.osl:90
#     outDisF = baseDisF + w * auDisF;
	mul		$tmp13 w auDisF 	%line{90} %argrw{"wrr"}
	add		outDisF baseDisF $tmp13 	%argrw{"wrr"}
	end
